VERSION 5.00
Object = "{00025600-0000-0000-C000-000000000046}#4.6#0"; "CRYSTL32.OCX"
Begin VB.MDIForm BACSwapParametros 
   BackColor       =   &H00C0C0C0&
   Caption         =   "BAC-PARAMETROS ( Sql Server )"
   ClientHeight    =   5835
   ClientLeft      =   1830
   ClientTop       =   5385
   ClientWidth     =   11880
   Icon            =   "BACSwapParametros.frx":0000
   LinkTopic       =   "BacTrd"
   Picture         =   "BACSwapParametros.frx":030A
   WindowState     =   2  'Maximized
   Begin Crystal.CrystalReport BacParam 
      Left            =   9285
      Top             =   0
      _ExtentX        =   741
      _ExtentY        =   741
      _Version        =   262150
   End
   Begin VB.PictureBox StatusBar1 
      Align           =   2  'Align Bottom
      Height          =   255
      Left            =   0
      ScaleHeight     =   195
      ScaleWidth      =   11820
      TabIndex        =   0
      Top             =   5580
      Width           =   11880
   End
   Begin VB.Timer Timer1 
      Interval        =   100
      Left            =   9720
      Top             =   0
   End
   Begin VB.Menu OPC_20 
      Caption         =   "&Clientes  "
      Begin VB.Menu OPC_21 
         Caption         =   "&Clientes                           "
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_22 
         Caption         =   "&Operadores"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_23 
         Caption         =   "&Apoderados"
         HelpContextID   =   1
      End
   End
   Begin VB.Menu OPC_30 
      Caption         =   "&Monedas    "
      Begin VB.Menu OPC_31 
         Caption         =   "&Monedas"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_32 
         Caption         =   "&Monedas por Producto         "
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_33 
         Caption         =   "&Valores Monedas"
         HelpContextID   =   1
      End
      Begin VB.Menu opc_34 
         Caption         =   "-"
         HelpContextID   =   1
         Visible         =   0   'False
      End
      Begin VB.Menu OPC_35 
         Caption         =   "&Paridades y Libor"
         HelpContextID   =   1
         Visible         =   0   'False
      End
   End
   Begin VB.Menu OPC_40 
      Caption         =   "&Formas de Pago  "
      Begin VB.Menu OPC_41 
         Caption         =   "&Formas de Pago"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_42 
         Caption         =   "&Formas de Pago por Moneda      "
         HelpContextID   =   1
      End
   End
   Begin VB.Menu OPC_550 
      Caption         =   "&Contabilidad"
      Begin VB.Menu OPC_551 
         Caption         =   "Pérfiles Contables"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_552 
         Caption         =   "-"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_553 
         Caption         =   "Valores a Contabilizar"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_554 
         Caption         =   "Plan de Cuentas"
         HelpContextID   =   1
      End
   End
   Begin VB.Menu OPC_600 
      Caption         =   "&Administracion"
      Begin VB.Menu OPC_610 
         Caption         =   "&Tablas"
         HelpContextID   =   1
         Begin VB.Menu OPC_611 
            Caption         =   "Emisores"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_612 
            Caption         =   "Series"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_613 
            Caption         =   "Tablas Generales"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_614 
            Caption         =   "Feriado"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_615 
            Caption         =   "Familia de Instrumentos"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_616 
            Caption         =   "Porcentaje de Variacion"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_617 
            Caption         =   "Ciudades"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_618 
            Caption         =   "Comunas"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_619 
            Caption         =   "Categorias"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_620 
            Caption         =   "Impresión Tabla Desarrollo <PRC>"
            HelpContextID   =   2
            Visible         =   0   'False
         End
      End
      Begin VB.Menu OPC_650 
         Caption         =   "Tablas para Planillas"
         HelpContextID   =   1
         Begin VB.Menu OPC_651 
            Caption         =   "Codigos OMA"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_652 
            Caption         =   "Codigos de Comercio y Concepto"
            HelpContextID   =   2
         End
         Begin VB.Menu OPC_653 
            Caption         =   "Codigo de Comercio para Planilla Automaticas"
            HelpContextID   =   2
         End
      End
      Begin VB.Menu OPC_660 
         Caption         =   "Glosa x Clientes Habituales"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_670 
         Caption         =   "Valores por Defecto para Spot Empresa"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_680 
         Caption         =   "Cartera"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_690 
         Caption         =   "Paridades Monedas"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_700 
         Caption         =   "Genaración Automática UF"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_740 
         Caption         =   "Genaración Automática IVP"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_710 
         Caption         =   "Periodos"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_720 
         Caption         =   "Tasas Forward"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_730 
         Caption         =   "Clientes SINACOFI"
         HelpContextID   =   1
      End
      Begin VB.Menu opc_780 
         Caption         =   "&Mantencion Pais y Plaza "
         HelpContextID   =   1
      End
      Begin VB.Menu opc_750 
         Caption         =   "&Corresponsales"
      End
      Begin VB.Menu opc_760 
         Caption         =   "Tipo Concepto"
      End
      Begin VB.Menu Menu_Líneas 
         Caption         =   "Control de &Líneas Retenidas"
      End
   End
   Begin VB.Menu OPC_800 
      Caption         =   "&Informes"
      Begin VB.Menu OPC_810 
         Caption         =   "Clientes"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_820 
         Caption         =   "Emisores"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_830 
         Caption         =   "Entidades"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_840 
         Caption         =   "Series"
         HelpContextID   =   1
         Visible         =   0   'False
      End
      Begin VB.Menu OPC_850 
         Caption         =   "Valores Monedas"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_860 
         Caption         =   "Tablas Generales"
         HelpContextID   =   1
      End
      Begin VB.Menu OPC_870 
         Caption         =   "Instrumentos"
      End
   End
   Begin VB.Menu OPC_900 
      Caption         =   "&Salir"
   End
End
Attribute VB_Name = "BACSwapParametros"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Explicit
Dim SW As Integer
Dim ContSw As Long
Sub DESHABILITA_MENU()
    Dim i%
    ' DESHABILITA TODAS LAS OPCIONES DEL MENU
    For i% = 0 To Me.Controls.Count - 1

        If TypeOf Me.Controls(i%) Is Menu Then
            If Me.Controls(i%).Caption <> "-" And Me.Controls(i%).Caption <> "?" And Me.Controls(i%).Caption <> "&Salir" Then
                Me.Controls(i%).Enabled = False
            End If
       
        End If
    
        If TypeOf Me.Controls(i%) Is CommandButton Then Me.Controls(i%).Enabled = False

    Next i%
End Sub
Sub MENU_TODOHABILITADO()
    Dim i%
    ' HABILITA TODAS LAS OPCIONES DEL MENU
    For i% = 0 To Me.Controls.Count - 1

        If TypeOf Me.Controls(i%) Is Menu Then
            If Me.Controls(i%).Caption <> "-" And Me.Controls(i%).Caption <> "?" And Me.Controls(i%).Caption <> "&Salir" Then
                Me.Controls(i%).Enabled = True
            End If
       
        End If
    
        If TypeOf Me.Controls(i%) Is CommandButton Then Me.Controls(i%).Enabled = True

    Next i%
End Sub

Function RevisarMensajes()

   Dim Sql           As String
   Dim nForms        As Integer
   Dim datos()

   Sql = "EXECUTE sp_mdmsgcontarpendientes '" & gsBAC_User & "'"

   'If MISQL.SQL_EXECUTE(SQL) <> 0 Then
   '   Exit Function
   'End If

   'Do While MISQL.SQL_FETCH(Datos()) = 0
   '   If Val(Datos(1)) > 0 Then
   '      'MsgBox "Existen Mensajes Nuevos", vbExclamation, "MENSAJES"
   '      BACSwap.Tag = PnlMensaje.Caption
   '      PnlMensaje.Caption = "Tiene Mensajes Nuevos"
   '      PnlMensaje.Tag = "MSG"
   '      PnlMensaje.Refresh

   '      For nForms = 1 To Forms.Count - 1
   '         If Forms(nForms).Tag = "RECIBIR" Then
   '            Call BacRecibir.RecibirLeerTodos
   '            Exit For

   '         End If

    '     Next nForms

      'End If

   'Loop

   'If PnlMensaje.Tag = "MSG" Then
   '   If PnlMensaje.BackColor = &HC0C0C0 Then
  '       PnlMensaje.BackColor = vbWhite
   '
    '  Else
    '     PnlMensaje.BackColor = &HC0C0C0
         
   '   End If
      
 '  End If

End Function


Private Sub clie_Click()
'BacMntCl.Show vbNormal
End Sub

Private Sub fin_Click()

End Sub

Private Sub ForPag_Click()
BacMntFormaPago.Show vbNormal
End Sub



Private Sub MDIForm_Activate()

   Dim a As Integer
   Dim Sql As String
   Dim cPict As String
   Dim datos()
    
   SW = 1
   ContSw = 0
   Screen.MousePointer = 0
   
   'Activa el Login a BacTrader.-
   If Not gbBac_Login Then
   
      If Not Proc_Carga_Parametros Then
         MsgBox "Error al cargar parámetros", vbCritical, TITSISTEMA & " - Error de Carga"
         Unload Me
         Exit Sub
      End If
      
      Call DESHABILITA_MENU
      
      Acceso_Usuario.Show 1
            
      If gsBAC_Login Then
      
         Screen.MousePointer = 11
         
         PROC_BUSCA_PRIVILEGIOS_USUARIO BACSwapParametros, "PCA"
        
         If Trim(gsBAC_User$) = "" Then
            Unload Me
            Exit Sub
         End If
         
         gbBac_Login = True
         
      Else
         
         Unload Me
         Exit Sub
                  
      End If
   
   End If
             
   'Pnl_Usuario.Caption = gsBAC_User$
   
   Screen.MousePointer = 0
    
'   Screen.MousePointer = 11
'
'   Screen.MousePointer = 0
'
'   Sistema = "PCS"
'   'Version = "PCS"
'
'   Screen.MousePointer = 11
'
'   'Activa el Login a BACSwap.-
'   If Not gsBAC_Login Then
'
'     ' VB+- Se cambia pantalla de login
'      If gsBAC_Login Then
'         Screen.MousePointer = 11
'
'         BacControlWindows 100
'
'         PROC_CARGA_PRIVILEGIOS
'
'      Else
'         Unload Me
'         Exit Sub
'
'      End If
'
'  End If
'
'
'   If gsc_Parametros.DatosGenerales() Then
'      Call AsignaValoresParametros
'   Else
'      MsgBox "Error en la recuperación de la tabla de parametros.", vbCritical, "MENSAJE"
'      Unload Me
'
'   End If
'
'
'   StatusBar1.Panels(1) = " " + gsBAC_Clien
'   StatusBar1.Panels(2) = "User : " + gsBAC_User$
'   StatusBar1.Panels(3) = " " + gsbac_fecp
'
'   Screen.MousePointer = 0
    
 '   Call MENU_TODOHABILITADO '''''''''''''' SACAR

End Sub

Private Function Proc_Carga_Parametros() As Boolean
   
   Dim datos()
   
   Proc_Carga_Parametros = False
   
   If MISQL.SQL_Execute("sp_bacswapparametros_cargaparametros ") <> 0 Then
        
      Exit Function
      
   End If
     
   If MISQL.SQL_Fetch(datos()) = 0 Then
   
      gsbac_fecp = datos(1)
      gsBAC_Clien = datos(2)
   
   End If
     
   If MISQL.SQL_Execute("sp_bacswapparametros_traecartera ") <> 0 Then
   
      Exit Function
      
   End If
   
   If MISQL.SQL_Fetch(datos()) = 0 Then
   
      'gsBac_CartRUT = Val(Datos(1))
      'gsBac_CartDV = Datos(2)
      'gsBac_CartNOM = Datos(3)
   
   End If
   
   Proc_Carga_Parametros = True

End Function

Sub PROC_CARGA_PRIVILEGIOS()
'***************leo************
Dim datos()
Dim i%
Dim Comando As String


If Trim(gsBAC_User) = "ADMINISTRADOR" Then Exit Sub

' DESHABILITA TODAS LAS OPCIONES DEL MENU

For i% = 0 To Me.Controls.Count - 1

    If TypeOf Me.Controls(i%) Is Menu Then

       If Me.Controls(i%).Caption <> "-" And Me.Controls(i%).Caption <> "?" Then
          Me.Controls(i%).Enabled = True
       End If

    End If

Next i%

Comando = "EXECUTE sp_busca_privilegios "
Comando = Comando + "'T',"
Comando = Comando + "'PCA',"
Comando = Comando + "'" + gsBac_Tipo_Usuario + "'"

If MISQL.SQL_Execute(Comando) <> 0 Then Exit Sub

' BUSCA LAS OPCIONES POR TIPO DE USUARIO

Do While MISQL.SQL_Fetch(datos()) = 0

   For i% = 0 To Me.Controls.Count - 1

       If TypeOf Me.Controls(i%) Is Menu Then
       
          If Trim(Me.Controls(i%).Name) = Trim(datos(1)) Then
             Me.Controls(i%).Enabled = True
          End If
       
       End If

   Next i%

Loop

' BUSCA LAS OPCIONES POR USUARIO
Comando = "EXECUTE SP_BUSCA_PRIVILEGIOS "
Comando = Comando + "'U',"
Comando = Comando + "'PCA',"
Comando = Comando + "'" + gsBac_Tipo_Usuario + "'"

If MISQL.SQL_Execute(Comando) <> 0 Then Exit Sub

' BUSCA LAS OPCIONES DEL USUARIO Y LAS HABILITA

Do While MISQL.SQL_Fetch(datos()) = 0

   For i% = 0 To Me.Controls.Count - 1

       If TypeOf Me.Controls(i%) Is Menu Then
       
          If Trim(Me.Controls(i%).Name) = Trim(datos(1)) Then
             Me.Controls(i%).Enabled = True
          End If
       
       End If

   Next i%

Loop

End Sub



Private Sub MDIForm_Load()
   'Dim Pantalla_Activa$
 
   Screen.MousePointer = 11
    
   If App.PrevInstance Then
      Screen.MousePointer = 0
      MsgBox "Sistema está cargado en memoria.", vbExclamation, TITSISTEMA & " - Error de Carga"
      End
   End If
   
   If Not Valida_Configuracion_Regional() Then
      End
   End If
   
   If Not BacInit Then     ' Parametros de Inicio.-
      Screen.MousePointer = 0
      End
   End If
   

   If Not BAC_Login(gsSQL_Login, gsSQL_Password) Then
      End
   End If
    
    Screen.MousePointer = 0

   
   If Trim$(Mid$(Command, 1, 11)) = "GENERA_MENU" Then
      PROC_GENERA_MENU BACSwapParametros, App.Path + "\" + Trim(App.EXEName) + ".MNU"
      End
   End If

    'If Trim(Login_Usuario) = "" Then
'       SQL_Close
'       SQL_Exit
'       End
    'End If
 

    'Pantalla_Activa$ = ""
    BACSwapParametros.WindowState = 2
    Screen.MousePointer = 0
  

End Sub

Sub PROC_BUSCA_PRIVILEGIOS_USUARIO(forma_menu As Form, Entidad As String)
Dim i%
Dim datos()

If Trim(gsBAC_User) = "ADMINISTRA" Then
   Call MENU_TODOHABILITADO
   Exit Sub
End If
' BUSCA LAS OPCIONES DEL USUARIO Y LAS HABILITA
Comando$ = "SP_BUSCA_PRIVILEGIOS "
Comando$ = Comando$ + "'T',"
Comando$ = Comando$ + "'" + Entidad + "',"
Comando$ = Comando$ + "'" + gsBac_Tipo_Usuario + "'"  'gsBac_Tipo_Usuario + "'"

If MISQL.SQL_Execute(Comando$) <> 0 Then Exit Sub

Do While MISQL.SQL_Fetch(datos()) = 0

   For i% = 0 To forma_menu.Controls.Count - 1

       If TypeOf forma_menu.Controls(i%) Is Menu Then
       
          If Trim(forma_menu.Controls(i%).Name) = Trim(datos(1)) Then
             forma_menu.Controls(i%).Enabled = True
          End If
       
       End If

   Next i%
Loop

Comando$ = "SP_BUSCA_PRIVILEGIOS "
Comando$ = Comando$ + "'U',"
Comando$ = Comando$ + "'" + Entidad + "',"
Comando$ = Comando$ + "'" + Login_Usuario + "'"

If MISQL.SQL_Execute(Comando$) <> 0 Then Exit Sub

Do While MISQL.SQL_Fetch(datos()) = 0

   For i% = 0 To forma_menu.Controls.Count - 1

       If TypeOf forma_menu.Controls(i%) Is Menu Then
          If Trim(forma_menu.Controls(i%).Name) = Trim(datos(1)) Then
             If datos(2) = "N" Then
                forma_menu.Controls(i%).Enabled = False
             Else
                forma_menu.Controls(i%).Enabled = True
             End If
          End If
       
       End If

   Next i%
Loop

Call Proc_Busca_privilegios_Especiales

End Sub

Sub PROC_GENERA_MENU(forma_menu As Form, nombre_archivo As String)
Dim i%
Open nombre_archivo For Output As #1

For i% = 0 To forma_menu.Controls.Count - 1

    If TypeOf forma_menu.Controls(i%) Is Menu Then
       
       If forma_menu.Controls(i%).Caption <> "-" And forma_menu.Controls(i%).Caption <> "?" Then
          Print #1, RELLENA_STRING(Format(forma_menu.Controls(i%).HelpContextID, "0") + forma_menu.Controls(i%).Caption, "D", 70) + RELLENA_STRING(forma_menu.Controls(i%).Name, "D", 20)
       End If
       
    End If

Next i%

Close #1

End Sub




Private Function BAC_Login(sUser$, sPWD$) As Boolean
BAC_Login = False

 If giSQL_ConnectionMode = 1 Then
      
    SQL_Setup gsSQL_Server$, gsSQL_Login$, gsSQL_Password$, gsSQL_Database, "xxxxx", gsBAC_Term, giSQL_LoginTimeOut, giSQL_QueryTimeOut
    
    If Not MISQL.SQL_Coneccion() Then
       Exit Function
    End If
 Else

    SQL_Setup gsSQL_Server$, sUser$, sPWD$, gsSQL_Database, "xxxxx", gsBAC_Term, giSQL_LoginTimeOut, giSQL_QueryTimeOut
    
    If Not MISQL.SQL_Coneccion() Then
       Exit Function
    End If
      
 End If
 
 BAC_Login = True
' BAC_Login = False
'
' If giSQL_ConnectionMode = 1 Then
'
'     If SQL_Open(gsSQL_Server$, gsSQL_Login$, gsSQL_Password$, gsSQL_Database, giSQL_LoginTimeOut, giSQL_QueryTimeOut) <> 0 Then
'        Exit Function
'    End If
'
' Else
'
'     If SQL_Open(gsSQL_Server, sUser$, sPWD$, gsSQL_Database, giSQL_LoginTimeOut, giSQL_QueryTimeOut) <> 0 Then
'        Exit Function
'     End If
'
' End If
'
' BAC_Login = True
  
 
End Function

Private Sub MDIForm_Unload(Cancel As Integer)
salir = MsgBox("Seguro que desea Salir", vbQuestion + vbYesNo, "Bac-Parametros")
If salir = 6 Then
    
    Call Salida_Usuario

End If

If salir <> 6 Then
    Cancel = True
End If

End Sub

Private Sub Vbsql1_Error(SqlConn As Integer, Severity As Integer, ErrorNum As Integer, ErrorStr As String, RetCode As Integer)

  BacLogFile "VBSQL = " & SqlConn & "-" & Severity & "-" & ErrorNum & "-" & ErrorStr & "-" & RetCode

End Sub

Private Sub VBSQL1_Message(SqlConn As Integer, Message As Long, State As Integer, Severity As Integer, MsgStr As String)
'MsgBox MsgStr
End Sub


Private Sub moneda_Click()
'BacMntMn.Show vbNormal
End Sub

Private Sub moned_Click()

'    Screen.MousePointer = 11
'    Centra_Form BacMntMn
'    BacMntMn.Show vbNormal
'    Screen.MousePointer = 0
End Sub

Private Sub Menu_Líneas_Click()
   BacLineasRetenidas.Show
End Sub

Private Sub opc_21_Click()
'BacMntCl.Show vbNormal
 '- Cliente-'
 
    Screen.MousePointer = 11
    Centra_Form BacMntCl
    BacMntCl.Show vbNormal
    Screen.MousePointer = 0
   
End Sub

Private Sub opc_22_Click()

'- Operadores -'

     BacControlWindows 100
    
     Screen.MousePointer = 11
     Centra_Form BacMntOperador
     BacMntOperador.Show vbNormal
     Screen.MousePointer = 0
    
End Sub

Private Sub opc_23_Click()

'- Apoderados -'
   
    BacControlWindows 100
    
    Screen.MousePointer = 11
    Centra_Form BacMntApoderado
    BacMntApoderado.Show vbNormal
    Screen.MousePointer = 0
    
End Sub

Private Sub OPC_24_Click()

   Mant_TipoUsuario.Show

End Sub

Private Sub opc_31_Click()

Screen.MousePointer = 11
    Centra_Form BacMntMn
    BacMntMn.Show vbNormal
    Screen.MousePointer = 0
     
End Sub

Private Sub opc_32_Click()

'- Monedas Por Producto -'

     BacControlWindows 100

     Screen.MousePointer = 11
     Centra_Form BacMntMP
     BacMntMP.Show vbNormal
     Screen.MousePointer = 0
     
End Sub

Private Sub opc_33_Click()
    On Error Resume Next
    BacMntVm.Show
    On Error GoTo 0
End Sub

Private Sub opc_34_Click()
 
 ' Guion '

End Sub

Private Sub opc_35_Click()

  '- Paridades y Libor -'
  
     'BacMntParLib.Show vbNormal
     
End Sub

Private Sub opc_41_Click()

 '- Formas de Pago -'
  
      BacControlWindows 100

      Screen.MousePointer = 11
      Centra_Form BacMntFormaPago
      BacMntFormaPago.Show vbNormal
      Screen.MousePointer = 0
    
End Sub

Private Sub opc_42_Click()

'- Forma de Pago por Moneda -'

    BacControlWindows 100
    mon = 1000
    Screen.MousePointer = 11
    Centra_Form BacMntMF
    BacMntMF.Show vbNormal
    
End Sub
Private Sub opc_551_Click()

    BacControlWindows 100
       
    Screen.MousePointer = 11
    Centra_Form Perfil_contable
    Perfil_contable.Show
    Screen.MousePointer = 0
    
    
End Sub

Private Sub opc_553_Click()
    
    BacControlWindows 100
    
    Screen.MousePointer = 11
    Centra_Form bacMntCampos
    bacMntCampos.Show
    Screen.MousePointer = 0


End Sub
Private Sub opc_554_Click()
    
    BacControlWindows 100
    
    
    Screen.MousePointer = 11
    Centra_Form Plan_Cuentas
    Plan_Cuentas.Show
    Screen.MousePointer = 0
    
End Sub
Private Sub opc_61_Click()

'- Feriados -'
 
     BacControlWindows 100
    
     Screen.MousePointer = 11
     Centra_Form BacMntFe
     BacMntFe.Show vbNormal
     Screen.MousePointer = 0
   
End Sub


Private Sub opc_80_Click()
 
        '- Salir -'
 
            Unload Me
End Sub

Private Sub opc_611_Click()
BacMntEm.Show vbNormal
End Sub

Private Sub opc_612_Click()
BacControlWindows 100
Screen.MousePointer = 11
BacMntSe.Show vbNormal
Screen.MousePointer = 0
End Sub

Private Sub opc_613_Click()
BacMntTb.Show
End Sub

Private Sub opc_614_Click()
BacMntFe.Show
End Sub

Private Sub opc_615_Click()
BacMntFa.Show
End Sub

Private Sub opc_616_Click()
Frm_Porc_Variacion.Show
End Sub

Private Sub opc_617_Click()
mntmanciu.Show
End Sub

Private Sub opc_618_Click()
On Error Resume Next
ManCom.Show
On Error GoTo 0
End Sub

Private Sub opc_619_Click()
BacMntCateg.Show
End Sub

Private Sub opc_620_Click()
BacInfSe.Show
End Sub

Private Sub opc_651_Click()
BacMntOma.Show
End Sub

Private Sub opc_652_Click()
BacMntComercioConcepto.Show
End Sub

Private Sub opc_653_Click()
bacMntPlanillaOperacion.Show
End Sub

Private Sub opc_660_Click()
BacMntGlosa.Show
End Sub

Private Sub opc_670_Click()
BacControlWindows 100
Screen.MousePointer = 11
BacIniValDef.Show
Screen.MousePointer = 0
End Sub

Private Sub opc_680_Click()
BacMntCr.Show
End Sub

Private Sub opc_690_Click()
BacMntVe.Show
End Sub

Private Sub opc_700_Click()
BacGenUF.Show
End Sub

Private Sub opc_710_Click()
BacMntPe.Show
End Sub

Private Sub opc_720_Click()
TasasForward.Show
End Sub

Private Sub opc_730_Click()
BacMntClientesSinacofi.Show
End Sub

Private Sub opc_740_Click()
BacGenIV.Show
End Sub

Private Sub opc_750_Click()
Baccorrespon.Show
End Sub

Private Sub opc_760_Click()

   Mantenedor_TipoConcepto.Show

End Sub


Private Sub opc_770_Click()

End Sub

Private Sub opc_780_Click()
BacMntPaisPlaza.Show
End Sub

Private Sub opc_790_Click()

'   Control_Bloq_Usuarios.Show

End Sub

Private Sub OPC_810_Click()
' ============================================= '
' Opción de informe , Cliente
' ============================================= '
   Call limpiar_cristal
   Screen.MousePointer = vbHourglass
   BACSwapParametros.BacParam.Destination = crptToWindow
   BACSwapParametros.BacParam.ReportFileName = gsRPT_Path & "clientes.rpt"
   BACSwapParametros.BacParam.WindowTitle = "INFORME DE CLIENTES"
   BACSwapParametros.BacParam.Connect = CONECCION
   BACSwapParametros.BacParam.Action = 1
   Screen.MousePointer = vbDefault

End Sub

Private Sub OPC_820_Click()
' ============================================= '
' Opción de informe , Emisores
' ============================================= '
   Call limpiar_cristal
   Screen.MousePointer = vbHourglass
   BACSwapParametros.BacParam.Destination = crptToWindow
   BACSwapParametros.BacParam.ReportFileName = gsRPT_Path & "emisores.rpt"
   BACSwapParametros.BacParam.WindowTitle = "INFORME DE EMISORES"
   BACSwapParametros.BacParam.Connect = CONECCION
   BACSwapParametros.BacParam.Action = 1
   Screen.MousePointer = vbDefault
    
End Sub

Private Sub OPC_830_Click()
' ============================================= '
' Opción de informe , Carteras
' ============================================= '
   Call limpiar_cristal
   Screen.MousePointer = vbHourglass
   BACSwapParametros.BacParam.Destination = crptToWindow
   BACSwapParametros.BacParam.ReportFileName = gsRPT_Path & "CARTERAS.RPT"
   BACSwapParametros.BacParam.WindowTitle = "INFORME DE ENTIDADES"
   BACSwapParametros.BacParam.Connect = CONECCION
   BACSwapParametros.BacParam.Action = 1
   Screen.MousePointer = vbDefault

End Sub

Private Sub OPC_850_Click()
BacFechas.Tag = "VALMON"
BacFechas.Caption = "Ingreso de fechas para valores de moneda"
BacFechas.Show
End Sub

Private Sub OPC_860_Click()
   Dim TitRpt As String
   Call limpiar_cristal
   Screen.MousePointer = vbHourglass
   TitRpt = "LISTADO DE TABLAS GENERALES"
   BACSwapParametros.BacParam.ReportFileName = gsRPT_Path & "LISTTABG.RPT"
   BACSwapParametros.BacParam.Destination = 0
   BACSwapParametros.BacParam.Formulas(0) = "tit='" & TitRpt & "'"
   BACSwapParametros.BacParam.Connect = CONECCION
   BACSwapParametros.BacParam.Action = 1
   Screen.MousePointer = vbDefault
    
End Sub

Private Sub OPC_870_Click()
   Dim TitRpt As String
   Call limpiar_cristal
   Screen.MousePointer = vbHourglass
   TitRpt = "INFORME DE FAMILIAS"
   BACSwapParametros.BacParam.ReportFileName = gsRPT_Path & "MANTFAM.RPT"
   BACSwapParametros.BacParam.Destination = 0
   BACSwapParametros.BacParam.Formulas(0) = "tit='" & TitRpt & "'"
   BACSwapParametros.BacParam.Connect = CONECCION
   BACSwapParametros.BacParam.Action = 1
   Screen.MousePointer = vbDefault
   
End Sub

Private Sub opc_900_Click()
    
    Unload Me
    
End Sub

Sub Salida_Usuario()
Dim datos()
Dim Terminales(10)
Dim Usuarios(10)
Dim Sistemas(10)
Dim TMP, TMP2, Terminal, m As String
Dim i, j As Integer

    Sql = "SP_CONTROL_BLOQ_USUARIOS_SALIR "
    Sql = Sql & "'" & gsUsuario & "'"
    Sql = Sql & ",'" & gsTerminal & "'"
    Sql = Sql & ",'" & gsSistema & "'"

    i = 1

    If MISQL.SQL_Execute(Sql) = 0 Then

        Do While MISQL.SQL_Fetch(datos()) = 0

            If datos(1) <> "ERROR" Then
                
                Usuarios(i) = datos(1)
                Sistemas(i) = datos(2)
                Terminales(i) = datos(3)
                i = i + 1
            
            End If

        Loop

    End If

'    For j = 1 To i - 1

        Sql = "SP_CONTROL_BLOQ_USUARIOS_ACTUALIZAR_TERMINAL "
        Sql = Sql & "'" & gsUsuario & "'"
 '       Sql = Sql & ",'" & j & "'"

        If MISQL.SQL_Execute(Sql) = 0 Then

            Do While MISQL.SQL_Fetch(datos()) = 0
            
 '               If datos(1) = gsUsuarioReal And datos(2) = Sistemas(j) And datos(3) = Terminales(j) Then
                
 '                   gsTerminal = j
                    
                    
                'End If

            Loop

        End If

   '' Next j

    m = Bloquea_Usuario(False, gsUsuario)

End Sub

'Private Sub Timer1_Timer()
'
'    Call Estado_Usuario
'
'End Sub


Sub Estado_Usuario()
Dim datos()
Dim Estado As String
Dim m As String
On Error GoTo fin:

          
    Sql = "SP_CONTROL_BLOQ_USUARIOS_VERIFICAR_TERMINAL "
    Sql = Sql & "'" & gsUsuarioReal & "'"
    Sql = Sql & ",'" & gsSistema & "'"
    Sql = Sql & ",'" & gsTerminal & "'"
  
    If MISQL.SQL_Execute(Sql) = 0 Then
        
        Do While MISQL.SQL_Fetch(datos()) = 0
        
            If datos(2) <> gsTerminal Then gsTerminal = datos(2)
         
        Loop
        
    End If

    Sql = "SP_CONTROL_BLOQ_USUARIOS_ESTADO_USUARIO "
    Sql = Sql & "'" & gsUsuario & "'"
    Sql = Sql & ",'" & gsSistema & "'"
  
    If MISQL.SQL_Execute(Sql) = 0 Then
        
        Do While MISQL.SQL_Fetch(datos()) = 0
        
            Estado = datos(1)
        
        Loop
        
    End If

    If Estado = "S" And SW = 1 Then
    
        Call DESHABILITA_MENU
        MsgBox "Usuario Bloqueado", vbExclamation + vbOKOnly
        m = Bloquea_Usuario(False, gsUsuario)
        SW = 0
        Unload Me
'        Call Salida_Usuario
'        End
    
    End If

'    If SW = 0 And ContSw < 35 Then
'
'        SendKeys "^{F4}"
'        ContSw = ContSw + 1
'
'
'    End If
'
    If Estado = "N" And SW = 0 Then
    
        
        MsgBox "Usuario Desbloqueado", vbExclamation + vbOKOnly
        PROC_BUSCA_PRIVILEGIOS_USUARIO BACSwapParametros, "PCA"
'        Call MENU_TODOHABILITADO
        SW = 1
        
    End If

fin:
End Sub


Sub Proc_Busca_privilegios_Especiales()
Dim datos()
Dim i As Integer
Dim SW As Integer

    Sql = "Sp_BacSwapParametros_Busca_Priv_Especiales "
    Sql = Sql & "'" & gsUsuario & "'"
    Sql = Sql & ",'PCA'"
    SW = 0
    
    If MISQL.SQL_Execute(Sql) = 0 Then
    
        
        
        Do While MISQL.SQL_Fetch(datos()) = 0
        
           If datos(1) = "NO EXISTE" Then Exit Sub
                           
           If SW = 0 Then
                
                DESHABILITA_MENU
                SW = 1
                
           End If
           
           For i% = 0 To BACSwapParametros.Controls.Count - 1
        
               If TypeOf BACSwapParametros.Controls(i%) Is Menu Then
               
                  If Trim(BACSwapParametros.Controls(i%).Name) = Trim(datos(1)) Then
                     BACSwapParametros.Controls(i%).Enabled = True
                  End If
               
               End If
        
           Next i%
        
        Loop
        
    End If
End Sub


Private Sub Timer1_Timer()

    Call Estado_Usuario
    Call Ver_Estado_Usuario
    
End Sub

Sub Ver_Estado_Usuario()
Dim datos()
Dim m As String

    Sql = "SP_CONTROL_BLOQ_USUARIOS_LEE_ACTIVOS "
    
    If MISQL.SQL_Execute(Sql) = 0 Then
    
        Do While MISQL.SQL_Fetch(datos()) = 0
                    
            If datos(1) = gsUsuario And Left(datos(3), 1) = "N" And Right(datos(3), 1) = Right(gsTerminal, 1) Then  '
        
                Call DESHABILITA_MENU
                MsgBox "Usuario Bloqueado", vbExclamation + vbOKOnly
                m = Bloquea_Usuario(False, gsUsuario)
                gsTerminal = datos(3)
                Salida_Usuario
                End
        
            End If
        
        Loop
        
    End If

End Sub
