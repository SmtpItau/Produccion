//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.225
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace AdminOpciones.SrvAsiaticas {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SrvAsiaticas.SrvAsiaticasSoap")]
    public interface SrvAsiaticasSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/generateFixingTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingenerateFixingTable(
                    int Town, 
                    System.DateTime fechaInicio, 
                    System.DateTime fechaFin, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaSetDePrecios, 
                    string intervalo, 
                    string TipoPeso, 
                    string paridad, 
                    string call_put_flag, 
                    string compra_venta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPrecios, 
                    int flagSmile, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndgenerateFixingTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ReLoadFixingTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginReLoadFixingTable(System.DateTime fechaInicio, System.DateTime fechaFin, System.DateTime fecha_val, System.DateTime FechaSetDePrecios, string intervalo, string tipoPeso, string paridad, double spot, double strike, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPrecios, string FixingTableXML, System.AsyncCallback callback, object asyncState);
        
        string EndReLoadFixingTable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Opcion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginOpcion(
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double spot_smile, 
                    double strike, 
                    System.DateTime fecha_val, 
                    System.DateTime fecha_Vencimiento, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPricing, 
                    int numComponente_Estruc, 
                    string PayOff, 
                    string Estruct_Indiv, 
                    string fijacionesDataXML, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndOpcion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_CallPut_Asiatico", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_CallPut_Asiatico(
                    string BsSpot_BsFwd_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    double MtM_objetivo, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    string fijacionesDataXML, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        double EndSolver_CallPut_Asiatico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GenerateStripTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGenerateStripTable(
                    int Town, 
                    System.DateTime fechaInicio, 
                    System.DateTime fechaFin, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaSetDePrecios, 
                    string intervalo, 
                    string TipoPeso, 
                    string paridad, 
                    string call_put_flag, 
                    string compra_venta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPrecios, 
                    int flagSmile, 
                    int Strip, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndGenerateStripTable(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SrvAsiaticasSoapChannel : AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class generateFixingTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public generateFixingTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReLoadFixingTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReLoadFixingTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpcionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OpcionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_CallPut_AsiaticoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_CallPut_AsiaticoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateStripTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateStripTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SrvAsiaticasSoapClient : System.ServiceModel.ClientBase<AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap>, AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap {
        
        private BeginOperationDelegate onBegingenerateFixingTableDelegate;
        
        private EndOperationDelegate onEndgenerateFixingTableDelegate;
        
        private System.Threading.SendOrPostCallback ongenerateFixingTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginReLoadFixingTableDelegate;
        
        private EndOperationDelegate onEndReLoadFixingTableDelegate;
        
        private System.Threading.SendOrPostCallback onReLoadFixingTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpcionDelegate;
        
        private EndOperationDelegate onEndOpcionDelegate;
        
        private System.Threading.SendOrPostCallback onOpcionCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_CallPut_AsiaticoDelegate;
        
        private EndOperationDelegate onEndSolver_CallPut_AsiaticoDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_CallPut_AsiaticoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateStripTableDelegate;
        
        private EndOperationDelegate onEndGenerateStripTableDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateStripTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SrvAsiaticasSoapClient() {
        }
        
        public SrvAsiaticasSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SrvAsiaticasSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvAsiaticasSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvAsiaticasSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("No se puede establecer el objeto CookieContainer. Asegúrese de que el enlace cont" +
                            "iene un objeto HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<generateFixingTableCompletedEventArgs> generateFixingTableCompleted;
        
        public event System.EventHandler<ReLoadFixingTableCompletedEventArgs> ReLoadFixingTableCompleted;
        
        public event System.EventHandler<OpcionCompletedEventArgs> OpcionCompleted;
        
        public event System.EventHandler<Solver_CallPut_AsiaticoCompletedEventArgs> Solver_CallPut_AsiaticoCompleted;
        
        public event System.EventHandler<GenerateStripTableCompletedEventArgs> GenerateStripTableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.BegingenerateFixingTable(
                    int Town, 
                    System.DateTime fechaInicio, 
                    System.DateTime fechaFin, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaSetDePrecios, 
                    string intervalo, 
                    string TipoPeso, 
                    string paridad, 
                    string call_put_flag, 
                    string compra_venta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPrecios, 
                    int flagSmile, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BegingenerateFixingTable(Town, fechaInicio, fechaFin, fecha_val, FechaSetDePrecios, intervalo, TipoPeso, paridad, call_put_flag, compra_venta, nominal, spot, strike, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPrecios, flagSmile, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.EndgenerateFixingTable(System.IAsyncResult result) {
            return base.Channel.EndgenerateFixingTable(result);
        }
        
        private System.IAsyncResult OnBegingenerateFixingTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Town = ((int)(inValues[0]));
            System.DateTime fechaInicio = ((System.DateTime)(inValues[1]));
            System.DateTime fechaFin = ((System.DateTime)(inValues[2]));
            System.DateTime fecha_val = ((System.DateTime)(inValues[3]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[4]));
            string intervalo = ((string)(inValues[5]));
            string TipoPeso = ((string)(inValues[6]));
            string paridad = ((string)(inValues[7]));
            string call_put_flag = ((string)(inValues[8]));
            string compra_venta = ((string)(inValues[9]));
            double nominal = ((double)(inValues[10]));
            double spot = ((double)(inValues[11]));
            double strike = ((double)(inValues[12]));
            string YieldNameCurvaDom = ((string)(inValues[13]));
            string YieldNameCurvaFor = ((string)(inValues[14]));
            int enumSetPrecios = ((int)(inValues[15]));
            int flagSmile = ((int)(inValues[16]));
            return ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).BegingenerateFixingTable(Town, fechaInicio, fechaFin, fecha_val, FechaSetDePrecios, intervalo, TipoPeso, paridad, call_put_flag, compra_venta, nominal, spot, strike, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPrecios, flagSmile, callback, asyncState);
        }
        
        private object[] OnEndgenerateFixingTable(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).EndgenerateFixingTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OngenerateFixingTableCompleted(object state) {
            if ((this.generateFixingTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.generateFixingTableCompleted(this, new generateFixingTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void generateFixingTableAsync(
                    int Town, 
                    System.DateTime fechaInicio, 
                    System.DateTime fechaFin, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaSetDePrecios, 
                    string intervalo, 
                    string TipoPeso, 
                    string paridad, 
                    string call_put_flag, 
                    string compra_venta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPrecios, 
                    int flagSmile) {
            this.generateFixingTableAsync(Town, fechaInicio, fechaFin, fecha_val, FechaSetDePrecios, intervalo, TipoPeso, paridad, call_put_flag, compra_venta, nominal, spot, strike, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPrecios, flagSmile, null);
        }
        
        public void generateFixingTableAsync(
                    int Town, 
                    System.DateTime fechaInicio, 
                    System.DateTime fechaFin, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaSetDePrecios, 
                    string intervalo, 
                    string TipoPeso, 
                    string paridad, 
                    string call_put_flag, 
                    string compra_venta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPrecios, 
                    int flagSmile, 
                    object userState) {
            if ((this.onBegingenerateFixingTableDelegate == null)) {
                this.onBegingenerateFixingTableDelegate = new BeginOperationDelegate(this.OnBegingenerateFixingTable);
            }
            if ((this.onEndgenerateFixingTableDelegate == null)) {
                this.onEndgenerateFixingTableDelegate = new EndOperationDelegate(this.OnEndgenerateFixingTable);
            }
            if ((this.ongenerateFixingTableCompletedDelegate == null)) {
                this.ongenerateFixingTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngenerateFixingTableCompleted);
            }
            base.InvokeAsync(this.onBegingenerateFixingTableDelegate, new object[] {
                        Town,
                        fechaInicio,
                        fechaFin,
                        fecha_val,
                        FechaSetDePrecios,
                        intervalo,
                        TipoPeso,
                        paridad,
                        call_put_flag,
                        compra_venta,
                        nominal,
                        spot,
                        strike,
                        YieldNameCurvaDom,
                        YieldNameCurvaFor,
                        enumSetPrecios,
                        flagSmile}, this.onEndgenerateFixingTableDelegate, this.ongenerateFixingTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.BeginReLoadFixingTable(System.DateTime fechaInicio, System.DateTime fechaFin, System.DateTime fecha_val, System.DateTime FechaSetDePrecios, string intervalo, string tipoPeso, string paridad, double spot, double strike, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPrecios, string FixingTableXML, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReLoadFixingTable(fechaInicio, fechaFin, fecha_val, FechaSetDePrecios, intervalo, tipoPeso, paridad, spot, strike, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPrecios, FixingTableXML, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.EndReLoadFixingTable(System.IAsyncResult result) {
            return base.Channel.EndReLoadFixingTable(result);
        }
        
        private System.IAsyncResult OnBeginReLoadFixingTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fechaInicio = ((System.DateTime)(inValues[0]));
            System.DateTime fechaFin = ((System.DateTime)(inValues[1]));
            System.DateTime fecha_val = ((System.DateTime)(inValues[2]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[3]));
            string intervalo = ((string)(inValues[4]));
            string tipoPeso = ((string)(inValues[5]));
            string paridad = ((string)(inValues[6]));
            double spot = ((double)(inValues[7]));
            double strike = ((double)(inValues[8]));
            string YieldNameCurvaDom = ((string)(inValues[9]));
            string YieldNameCurvaFor = ((string)(inValues[10]));
            int enumSetPrecios = ((int)(inValues[11]));
            string FixingTableXML = ((string)(inValues[12]));
            return ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).BeginReLoadFixingTable(fechaInicio, fechaFin, fecha_val, FechaSetDePrecios, intervalo, tipoPeso, paridad, spot, strike, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPrecios, FixingTableXML, callback, asyncState);
        }
        
        private object[] OnEndReLoadFixingTable(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).EndReLoadFixingTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReLoadFixingTableCompleted(object state) {
            if ((this.ReLoadFixingTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReLoadFixingTableCompleted(this, new ReLoadFixingTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReLoadFixingTableAsync(System.DateTime fechaInicio, System.DateTime fechaFin, System.DateTime fecha_val, System.DateTime FechaSetDePrecios, string intervalo, string tipoPeso, string paridad, double spot, double strike, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPrecios, string FixingTableXML) {
            this.ReLoadFixingTableAsync(fechaInicio, fechaFin, fecha_val, FechaSetDePrecios, intervalo, tipoPeso, paridad, spot, strike, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPrecios, FixingTableXML, null);
        }
        
        public void ReLoadFixingTableAsync(System.DateTime fechaInicio, System.DateTime fechaFin, System.DateTime fecha_val, System.DateTime FechaSetDePrecios, string intervalo, string tipoPeso, string paridad, double spot, double strike, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPrecios, string FixingTableXML, object userState) {
            if ((this.onBeginReLoadFixingTableDelegate == null)) {
                this.onBeginReLoadFixingTableDelegate = new BeginOperationDelegate(this.OnBeginReLoadFixingTable);
            }
            if ((this.onEndReLoadFixingTableDelegate == null)) {
                this.onEndReLoadFixingTableDelegate = new EndOperationDelegate(this.OnEndReLoadFixingTable);
            }
            if ((this.onReLoadFixingTableCompletedDelegate == null)) {
                this.onReLoadFixingTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReLoadFixingTableCompleted);
            }
            base.InvokeAsync(this.onBeginReLoadFixingTableDelegate, new object[] {
                        fechaInicio,
                        fechaFin,
                        fecha_val,
                        FechaSetDePrecios,
                        intervalo,
                        tipoPeso,
                        paridad,
                        spot,
                        strike,
                        YieldNameCurvaDom,
                        YieldNameCurvaFor,
                        enumSetPrecios,
                        FixingTableXML}, this.onEndReLoadFixingTableDelegate, this.onReLoadFixingTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.BeginOpcion(
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double spot_smile, 
                    double strike, 
                    System.DateTime fecha_val, 
                    System.DateTime fecha_Vencimiento, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPricing, 
                    int numComponente_Estruc, 
                    string PayOff, 
                    string Estruct_Indiv, 
                    string fijacionesDataXML, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginOpcion(paridad, call_put_flag, compraVenta, nominal, spot, spot_smile, strike, fecha_val, fecha_Vencimiento, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPricing, numComponente_Estruc, PayOff, Estruct_Indiv, fijacionesDataXML, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.EndOpcion(System.IAsyncResult result) {
            return base.Channel.EndOpcion(result);
        }
        
        private System.IAsyncResult OnBeginOpcion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string paridad = ((string)(inValues[0]));
            string call_put_flag = ((string)(inValues[1]));
            string compraVenta = ((string)(inValues[2]));
            double nominal = ((double)(inValues[3]));
            double spot = ((double)(inValues[4]));
            double spot_smile = ((double)(inValues[5]));
            double strike = ((double)(inValues[6]));
            System.DateTime fecha_val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencimiento = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string YieldNameCurvaDom = ((string)(inValues[10]));
            string YieldNameCurvaFor = ((string)(inValues[11]));
            int enumSetPricing = ((int)(inValues[12]));
            int numComponente_Estruc = ((int)(inValues[13]));
            string PayOff = ((string)(inValues[14]));
            string Estruct_Indiv = ((string)(inValues[15]));
            string fijacionesDataXML = ((string)(inValues[16]));
            return ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).BeginOpcion(paridad, call_put_flag, compraVenta, nominal, spot, spot_smile, strike, fecha_val, fecha_Vencimiento, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPricing, numComponente_Estruc, PayOff, Estruct_Indiv, fijacionesDataXML, callback, asyncState);
        }
        
        private object[] OnEndOpcion(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).EndOpcion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOpcionCompleted(object state) {
            if ((this.OpcionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpcionCompleted(this, new OpcionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpcionAsync(
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double spot_smile, 
                    double strike, 
                    System.DateTime fecha_val, 
                    System.DateTime fecha_Vencimiento, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPricing, 
                    int numComponente_Estruc, 
                    string PayOff, 
                    string Estruct_Indiv, 
                    string fijacionesDataXML) {
            this.OpcionAsync(paridad, call_put_flag, compraVenta, nominal, spot, spot_smile, strike, fecha_val, fecha_Vencimiento, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPricing, numComponente_Estruc, PayOff, Estruct_Indiv, fijacionesDataXML, null);
        }
        
        public void OpcionAsync(
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double spot_smile, 
                    double strike, 
                    System.DateTime fecha_val, 
                    System.DateTime fecha_Vencimiento, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPricing, 
                    int numComponente_Estruc, 
                    string PayOff, 
                    string Estruct_Indiv, 
                    string fijacionesDataXML, 
                    object userState) {
            if ((this.onBeginOpcionDelegate == null)) {
                this.onBeginOpcionDelegate = new BeginOperationDelegate(this.OnBeginOpcion);
            }
            if ((this.onEndOpcionDelegate == null)) {
                this.onEndOpcionDelegate = new EndOperationDelegate(this.OnEndOpcion);
            }
            if ((this.onOpcionCompletedDelegate == null)) {
                this.onOpcionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpcionCompleted);
            }
            base.InvokeAsync(this.onBeginOpcionDelegate, new object[] {
                        paridad,
                        call_put_flag,
                        compraVenta,
                        nominal,
                        spot,
                        spot_smile,
                        strike,
                        fecha_val,
                        fecha_Vencimiento,
                        FechaSetDePrecios,
                        YieldNameCurvaDom,
                        YieldNameCurvaFor,
                        enumSetPricing,
                        numComponente_Estruc,
                        PayOff,
                        Estruct_Indiv,
                        fijacionesDataXML}, this.onEndOpcionDelegate, this.onOpcionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.BeginSolver_CallPut_Asiatico(
                    string BsSpot_BsFwd_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    double MtM_objetivo, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    string fijacionesDataXML, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSolver_CallPut_Asiatico(BsSpot_BsFwd_flag, paridad, call_put_flag, compraVenta, nominal, spot, strike, MtM_objetivo, fecha_val, FechaVenc, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, fijacionesDataXML, enumSetPricing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.EndSolver_CallPut_Asiatico(System.IAsyncResult result) {
            return base.Channel.EndSolver_CallPut_Asiatico(result);
        }
        
        private System.IAsyncResult OnBeginSolver_CallPut_Asiatico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string BsSpot_BsFwd_flag = ((string)(inValues[0]));
            string paridad = ((string)(inValues[1]));
            string call_put_flag = ((string)(inValues[2]));
            string compraVenta = ((string)(inValues[3]));
            double nominal = ((double)(inValues[4]));
            double spot = ((double)(inValues[5]));
            double strike = ((double)(inValues[6]));
            double MtM_objetivo = ((double)(inValues[7]));
            System.DateTime fecha_val = ((System.DateTime)(inValues[8]));
            System.DateTime FechaVenc = ((System.DateTime)(inValues[9]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[10]));
            string YieldNameCurvaDom = ((string)(inValues[11]));
            string YieldNameCurvaFor = ((string)(inValues[12]));
            string fijacionesDataXML = ((string)(inValues[13]));
            int enumSetPricing = ((int)(inValues[14]));
            return ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).BeginSolver_CallPut_Asiatico(BsSpot_BsFwd_flag, paridad, call_put_flag, compraVenta, nominal, spot, strike, MtM_objetivo, fecha_val, FechaVenc, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, fijacionesDataXML, enumSetPricing, callback, asyncState);
        }
        
        private object[] OnEndSolver_CallPut_Asiatico(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).EndSolver_CallPut_Asiatico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_CallPut_AsiaticoCompleted(object state) {
            if ((this.Solver_CallPut_AsiaticoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_CallPut_AsiaticoCompleted(this, new Solver_CallPut_AsiaticoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_CallPut_AsiaticoAsync(string BsSpot_BsFwd_flag, string paridad, string call_put_flag, string compraVenta, double nominal, double spot, double strike, double MtM_objetivo, System.DateTime fecha_val, System.DateTime FechaVenc, System.DateTime FechaSetDePrecios, string YieldNameCurvaDom, string YieldNameCurvaFor, string fijacionesDataXML, int enumSetPricing) {
            this.Solver_CallPut_AsiaticoAsync(BsSpot_BsFwd_flag, paridad, call_put_flag, compraVenta, nominal, spot, strike, MtM_objetivo, fecha_val, FechaVenc, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, fijacionesDataXML, enumSetPricing, null);
        }
        
        public void Solver_CallPut_AsiaticoAsync(
                    string BsSpot_BsFwd_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    double MtM_objetivo, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    string fijacionesDataXML, 
                    int enumSetPricing, 
                    object userState) {
            if ((this.onBeginSolver_CallPut_AsiaticoDelegate == null)) {
                this.onBeginSolver_CallPut_AsiaticoDelegate = new BeginOperationDelegate(this.OnBeginSolver_CallPut_Asiatico);
            }
            if ((this.onEndSolver_CallPut_AsiaticoDelegate == null)) {
                this.onEndSolver_CallPut_AsiaticoDelegate = new EndOperationDelegate(this.OnEndSolver_CallPut_Asiatico);
            }
            if ((this.onSolver_CallPut_AsiaticoCompletedDelegate == null)) {
                this.onSolver_CallPut_AsiaticoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_CallPut_AsiaticoCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_CallPut_AsiaticoDelegate, new object[] {
                        BsSpot_BsFwd_flag,
                        paridad,
                        call_put_flag,
                        compraVenta,
                        nominal,
                        spot,
                        strike,
                        MtM_objetivo,
                        fecha_val,
                        FechaVenc,
                        FechaSetDePrecios,
                        YieldNameCurvaDom,
                        YieldNameCurvaFor,
                        fijacionesDataXML,
                        enumSetPricing}, this.onEndSolver_CallPut_AsiaticoDelegate, this.onSolver_CallPut_AsiaticoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.BeginGenerateStripTable(
                    int Town, 
                    System.DateTime fechaInicio, 
                    System.DateTime fechaFin, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaSetDePrecios, 
                    string intervalo, 
                    string TipoPeso, 
                    string paridad, 
                    string call_put_flag, 
                    string compra_venta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPrecios, 
                    int flagSmile, 
                    int Strip, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginGenerateStripTable(Town, fechaInicio, fechaFin, fecha_val, FechaSetDePrecios, intervalo, TipoPeso, paridad, call_put_flag, compra_venta, nominal, spot, strike, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPrecios, flagSmile, Strip, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap.EndGenerateStripTable(System.IAsyncResult result) {
            return base.Channel.EndGenerateStripTable(result);
        }
        
        private System.IAsyncResult OnBeginGenerateStripTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Town = ((int)(inValues[0]));
            System.DateTime fechaInicio = ((System.DateTime)(inValues[1]));
            System.DateTime fechaFin = ((System.DateTime)(inValues[2]));
            System.DateTime fecha_val = ((System.DateTime)(inValues[3]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[4]));
            string intervalo = ((string)(inValues[5]));
            string TipoPeso = ((string)(inValues[6]));
            string paridad = ((string)(inValues[7]));
            string call_put_flag = ((string)(inValues[8]));
            string compra_venta = ((string)(inValues[9]));
            double nominal = ((double)(inValues[10]));
            double spot = ((double)(inValues[11]));
            double strike = ((double)(inValues[12]));
            string YieldNameCurvaDom = ((string)(inValues[13]));
            string YieldNameCurvaFor = ((string)(inValues[14]));
            int enumSetPrecios = ((int)(inValues[15]));
            int flagSmile = ((int)(inValues[16]));
            int Strip = ((int)(inValues[17]));
            return ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).BeginGenerateStripTable(Town, fechaInicio, fechaFin, fecha_val, FechaSetDePrecios, intervalo, TipoPeso, paridad, call_put_flag, compra_venta, nominal, spot, strike, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPrecios, flagSmile, Strip, callback, asyncState);
        }
        
        private object[] OnEndGenerateStripTable(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap)(this)).EndGenerateStripTable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateStripTableCompleted(object state) {
            if ((this.GenerateStripTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateStripTableCompleted(this, new GenerateStripTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateStripTableAsync(
                    int Town, 
                    System.DateTime fechaInicio, 
                    System.DateTime fechaFin, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaSetDePrecios, 
                    string intervalo, 
                    string TipoPeso, 
                    string paridad, 
                    string call_put_flag, 
                    string compra_venta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPrecios, 
                    int flagSmile, 
                    int Strip) {
            this.GenerateStripTableAsync(Town, fechaInicio, fechaFin, fecha_val, FechaSetDePrecios, intervalo, TipoPeso, paridad, call_put_flag, compra_venta, nominal, spot, strike, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPrecios, flagSmile, Strip, null);
        }
        
        public void GenerateStripTableAsync(
                    int Town, 
                    System.DateTime fechaInicio, 
                    System.DateTime fechaFin, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaSetDePrecios, 
                    string intervalo, 
                    string TipoPeso, 
                    string paridad, 
                    string call_put_flag, 
                    string compra_venta, 
                    double nominal, 
                    double spot, 
                    double strike, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPrecios, 
                    int flagSmile, 
                    int Strip, 
                    object userState) {
            if ((this.onBeginGenerateStripTableDelegate == null)) {
                this.onBeginGenerateStripTableDelegate = new BeginOperationDelegate(this.OnBeginGenerateStripTable);
            }
            if ((this.onEndGenerateStripTableDelegate == null)) {
                this.onEndGenerateStripTableDelegate = new EndOperationDelegate(this.OnEndGenerateStripTable);
            }
            if ((this.onGenerateStripTableCompletedDelegate == null)) {
                this.onGenerateStripTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateStripTableCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateStripTableDelegate, new object[] {
                        Town,
                        fechaInicio,
                        fechaFin,
                        fecha_val,
                        FechaSetDePrecios,
                        intervalo,
                        TipoPeso,
                        paridad,
                        call_put_flag,
                        compra_venta,
                        nominal,
                        spot,
                        strike,
                        YieldNameCurvaDom,
                        YieldNameCurvaFor,
                        enumSetPrecios,
                        flagSmile,
                        Strip}, this.onEndGenerateStripTableDelegate, this.onGenerateStripTableCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap CreateChannel() {
            return new SrvAsiaticasSoapClientChannel(this);
        }
        
        private class SrvAsiaticasSoapClientChannel : ChannelBase<AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap>, AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap {
            
            public SrvAsiaticasSoapClientChannel(System.ServiceModel.ClientBase<AdminOpciones.SrvAsiaticas.SrvAsiaticasSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingenerateFixingTable(
                        int Town, 
                        System.DateTime fechaInicio, 
                        System.DateTime fechaFin, 
                        System.DateTime fecha_val, 
                        System.DateTime FechaSetDePrecios, 
                        string intervalo, 
                        string TipoPeso, 
                        string paridad, 
                        string call_put_flag, 
                        string compra_venta, 
                        double nominal, 
                        double spot, 
                        double strike, 
                        string YieldNameCurvaDom, 
                        string YieldNameCurvaFor, 
                        int enumSetPrecios, 
                        int flagSmile, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[17];
                _args[0] = Town;
                _args[1] = fechaInicio;
                _args[2] = fechaFin;
                _args[3] = fecha_val;
                _args[4] = FechaSetDePrecios;
                _args[5] = intervalo;
                _args[6] = TipoPeso;
                _args[7] = paridad;
                _args[8] = call_put_flag;
                _args[9] = compra_venta;
                _args[10] = nominal;
                _args[11] = spot;
                _args[12] = strike;
                _args[13] = YieldNameCurvaDom;
                _args[14] = YieldNameCurvaFor;
                _args[15] = enumSetPrecios;
                _args[16] = flagSmile;
                System.IAsyncResult _result = base.BeginInvoke("generateFixingTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndgenerateFixingTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("generateFixingTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReLoadFixingTable(System.DateTime fechaInicio, System.DateTime fechaFin, System.DateTime fecha_val, System.DateTime FechaSetDePrecios, string intervalo, string tipoPeso, string paridad, double spot, double strike, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPrecios, string FixingTableXML, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[13];
                _args[0] = fechaInicio;
                _args[1] = fechaFin;
                _args[2] = fecha_val;
                _args[3] = FechaSetDePrecios;
                _args[4] = intervalo;
                _args[5] = tipoPeso;
                _args[6] = paridad;
                _args[7] = spot;
                _args[8] = strike;
                _args[9] = YieldNameCurvaDom;
                _args[10] = YieldNameCurvaFor;
                _args[11] = enumSetPrecios;
                _args[12] = FixingTableXML;
                System.IAsyncResult _result = base.BeginInvoke("ReLoadFixingTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndReLoadFixingTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ReLoadFixingTable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOpcion(
                        string paridad, 
                        string call_put_flag, 
                        string compraVenta, 
                        double nominal, 
                        double spot, 
                        double spot_smile, 
                        double strike, 
                        System.DateTime fecha_val, 
                        System.DateTime fecha_Vencimiento, 
                        System.DateTime FechaSetDePrecios, 
                        string YieldNameCurvaDom, 
                        string YieldNameCurvaFor, 
                        int enumSetPricing, 
                        int numComponente_Estruc, 
                        string PayOff, 
                        string Estruct_Indiv, 
                        string fijacionesDataXML, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[17];
                _args[0] = paridad;
                _args[1] = call_put_flag;
                _args[2] = compraVenta;
                _args[3] = nominal;
                _args[4] = spot;
                _args[5] = spot_smile;
                _args[6] = strike;
                _args[7] = fecha_val;
                _args[8] = fecha_Vencimiento;
                _args[9] = FechaSetDePrecios;
                _args[10] = YieldNameCurvaDom;
                _args[11] = YieldNameCurvaFor;
                _args[12] = enumSetPricing;
                _args[13] = numComponente_Estruc;
                _args[14] = PayOff;
                _args[15] = Estruct_Indiv;
                _args[16] = fijacionesDataXML;
                System.IAsyncResult _result = base.BeginInvoke("Opcion", _args, callback, asyncState);
                return _result;
            }
            
            public string EndOpcion(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Opcion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_CallPut_Asiatico(
                        string BsSpot_BsFwd_flag, 
                        string paridad, 
                        string call_put_flag, 
                        string compraVenta, 
                        double nominal, 
                        double spot, 
                        double strike, 
                        double MtM_objetivo, 
                        System.DateTime fecha_val, 
                        System.DateTime FechaVenc, 
                        System.DateTime FechaSetDePrecios, 
                        string YieldNameCurvaDom, 
                        string YieldNameCurvaFor, 
                        string fijacionesDataXML, 
                        int enumSetPricing, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[15];
                _args[0] = BsSpot_BsFwd_flag;
                _args[1] = paridad;
                _args[2] = call_put_flag;
                _args[3] = compraVenta;
                _args[4] = nominal;
                _args[5] = spot;
                _args[6] = strike;
                _args[7] = MtM_objetivo;
                _args[8] = fecha_val;
                _args[9] = FechaVenc;
                _args[10] = FechaSetDePrecios;
                _args[11] = YieldNameCurvaDom;
                _args[12] = YieldNameCurvaFor;
                _args[13] = fijacionesDataXML;
                _args[14] = enumSetPricing;
                System.IAsyncResult _result = base.BeginInvoke("Solver_CallPut_Asiatico", _args, callback, asyncState);
                return _result;
            }
            
            public double EndSolver_CallPut_Asiatico(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Solver_CallPut_Asiatico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGenerateStripTable(
                        int Town, 
                        System.DateTime fechaInicio, 
                        System.DateTime fechaFin, 
                        System.DateTime fecha_val, 
                        System.DateTime FechaSetDePrecios, 
                        string intervalo, 
                        string TipoPeso, 
                        string paridad, 
                        string call_put_flag, 
                        string compra_venta, 
                        double nominal, 
                        double spot, 
                        double strike, 
                        string YieldNameCurvaDom, 
                        string YieldNameCurvaFor, 
                        int enumSetPrecios, 
                        int flagSmile, 
                        int Strip, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[18];
                _args[0] = Town;
                _args[1] = fechaInicio;
                _args[2] = fechaFin;
                _args[3] = fecha_val;
                _args[4] = FechaSetDePrecios;
                _args[5] = intervalo;
                _args[6] = TipoPeso;
                _args[7] = paridad;
                _args[8] = call_put_flag;
                _args[9] = compra_venta;
                _args[10] = nominal;
                _args[11] = spot;
                _args[12] = strike;
                _args[13] = YieldNameCurvaDom;
                _args[14] = YieldNameCurvaFor;
                _args[15] = enumSetPrecios;
                _args[16] = flagSmile;
                _args[17] = Strip;
                System.IAsyncResult _result = base.BeginInvoke("GenerateStripTable", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGenerateStripTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GenerateStripTable", _args, result)));
                return _result;
            }
        }
    }
}
