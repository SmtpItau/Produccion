//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.225
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace AdminOpciones.SrvSmile {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SrvSmile.SrvSmileSoap")]
    public interface SrvSmileSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Fwd_Delta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginFwd_Delta(string paridad, string call_put_flag, string compra_venta, double nominal, double spot, double strike, System.DateTime fecha_val, System.DateTime fecha_vencimiento, System.DateTime FechaSetDePrecios, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPricing, System.AsyncCallback callback, object asyncState);
        
        double EndFwd_Delta(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/OpcionVanilla", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginOpcionVanilla(
                    string BsSpot_BsFwd, 
                    string strikes_delta_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double spot_smile, 
                    double puntos, 
                    double strike_delta, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int numComponente_Estruc, 
                    string PayOff, 
                    string Estruct_Indiv, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndOpcionVanilla(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_CallPut_Vanilla", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_CallPut_Vanilla(
                    string BsSpot_BsFwd_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double puntos, 
                    double strike, 
                    double MtM_objetivo, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        double EndSolver_CallPut_Vanilla(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SrvSmileSoapChannel : AdminOpciones.SrvSmile.SrvSmileSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Fwd_DeltaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Fwd_DeltaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpcionVanillaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OpcionVanillaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_CallPut_VanillaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_CallPut_VanillaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SrvSmileSoapClient : System.ServiceModel.ClientBase<AdminOpciones.SrvSmile.SrvSmileSoap>, AdminOpciones.SrvSmile.SrvSmileSoap {
        
        private BeginOperationDelegate onBeginFwd_DeltaDelegate;
        
        private EndOperationDelegate onEndFwd_DeltaDelegate;
        
        private System.Threading.SendOrPostCallback onFwd_DeltaCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpcionVanillaDelegate;
        
        private EndOperationDelegate onEndOpcionVanillaDelegate;
        
        private System.Threading.SendOrPostCallback onOpcionVanillaCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_CallPut_VanillaDelegate;
        
        private EndOperationDelegate onEndSolver_CallPut_VanillaDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_CallPut_VanillaCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SrvSmileSoapClient() {
        }
        
        public SrvSmileSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SrvSmileSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvSmileSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvSmileSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("No se puede establecer el objeto CookieContainer. Asegúrese de que el enlace cont" +
                            "iene un objeto HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<Fwd_DeltaCompletedEventArgs> Fwd_DeltaCompleted;
        
        public event System.EventHandler<OpcionVanillaCompletedEventArgs> OpcionVanillaCompleted;
        
        public event System.EventHandler<Solver_CallPut_VanillaCompletedEventArgs> Solver_CallPut_VanillaCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvSmile.SrvSmileSoap.BeginFwd_Delta(string paridad, string call_put_flag, string compra_venta, double nominal, double spot, double strike, System.DateTime fecha_val, System.DateTime fecha_vencimiento, System.DateTime FechaSetDePrecios, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPricing, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFwd_Delta(paridad, call_put_flag, compra_venta, nominal, spot, strike, fecha_val, fecha_vencimiento, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPricing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvSmile.SrvSmileSoap.EndFwd_Delta(System.IAsyncResult result) {
            return base.Channel.EndFwd_Delta(result);
        }
        
        private System.IAsyncResult OnBeginFwd_Delta(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string paridad = ((string)(inValues[0]));
            string call_put_flag = ((string)(inValues[1]));
            string compra_venta = ((string)(inValues[2]));
            double nominal = ((double)(inValues[3]));
            double spot = ((double)(inValues[4]));
            double strike = ((double)(inValues[5]));
            System.DateTime fecha_val = ((System.DateTime)(inValues[6]));
            System.DateTime fecha_vencimiento = ((System.DateTime)(inValues[7]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[8]));
            string YieldNameCurvaDom = ((string)(inValues[9]));
            string YieldNameCurvaFor = ((string)(inValues[10]));
            int enumSetPricing = ((int)(inValues[11]));
            return ((AdminOpciones.SrvSmile.SrvSmileSoap)(this)).BeginFwd_Delta(paridad, call_put_flag, compra_venta, nominal, spot, strike, fecha_val, fecha_vencimiento, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPricing, callback, asyncState);
        }
        
        private object[] OnEndFwd_Delta(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvSmile.SrvSmileSoap)(this)).EndFwd_Delta(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFwd_DeltaCompleted(object state) {
            if ((this.Fwd_DeltaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Fwd_DeltaCompleted(this, new Fwd_DeltaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Fwd_DeltaAsync(string paridad, string call_put_flag, string compra_venta, double nominal, double spot, double strike, System.DateTime fecha_val, System.DateTime fecha_vencimiento, System.DateTime FechaSetDePrecios, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPricing) {
            this.Fwd_DeltaAsync(paridad, call_put_flag, compra_venta, nominal, spot, strike, fecha_val, fecha_vencimiento, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPricing, null);
        }
        
        public void Fwd_DeltaAsync(string paridad, string call_put_flag, string compra_venta, double nominal, double spot, double strike, System.DateTime fecha_val, System.DateTime fecha_vencimiento, System.DateTime FechaSetDePrecios, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPricing, object userState) {
            if ((this.onBeginFwd_DeltaDelegate == null)) {
                this.onBeginFwd_DeltaDelegate = new BeginOperationDelegate(this.OnBeginFwd_Delta);
            }
            if ((this.onEndFwd_DeltaDelegate == null)) {
                this.onEndFwd_DeltaDelegate = new EndOperationDelegate(this.OnEndFwd_Delta);
            }
            if ((this.onFwd_DeltaCompletedDelegate == null)) {
                this.onFwd_DeltaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFwd_DeltaCompleted);
            }
            base.InvokeAsync(this.onBeginFwd_DeltaDelegate, new object[] {
                        paridad,
                        call_put_flag,
                        compra_venta,
                        nominal,
                        spot,
                        strike,
                        fecha_val,
                        fecha_vencimiento,
                        FechaSetDePrecios,
                        YieldNameCurvaDom,
                        YieldNameCurvaFor,
                        enumSetPricing}, this.onEndFwd_DeltaDelegate, this.onFwd_DeltaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvSmile.SrvSmileSoap.BeginOpcionVanilla(
                    string BsSpot_BsFwd, 
                    string strikes_delta_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double spot_smile, 
                    double puntos, 
                    double strike_delta, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int numComponente_Estruc, 
                    string PayOff, 
                    string Estruct_Indiv, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginOpcionVanilla(BsSpot_BsFwd, strikes_delta_flag, paridad, call_put_flag, compraVenta, nominal, spot, spot_smile, puntos, strike_delta, fecha_val, FechaVenc, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, numComponente_Estruc, PayOff, Estruct_Indiv, enumSetPricing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvSmile.SrvSmileSoap.EndOpcionVanilla(System.IAsyncResult result) {
            return base.Channel.EndOpcionVanilla(result);
        }
        
        private System.IAsyncResult OnBeginOpcionVanilla(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string BsSpot_BsFwd = ((string)(inValues[0]));
            string strikes_delta_flag = ((string)(inValues[1]));
            string paridad = ((string)(inValues[2]));
            string call_put_flag = ((string)(inValues[3]));
            string compraVenta = ((string)(inValues[4]));
            double nominal = ((double)(inValues[5]));
            double spot = ((double)(inValues[6]));
            double spot_smile = ((double)(inValues[7]));
            double puntos = ((double)(inValues[8]));
            double strike_delta = ((double)(inValues[9]));
            System.DateTime fecha_val = ((System.DateTime)(inValues[10]));
            System.DateTime FechaVenc = ((System.DateTime)(inValues[11]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[12]));
            string YieldNameCurvaDom = ((string)(inValues[13]));
            string YieldNameCurvaFor = ((string)(inValues[14]));
            int numComponente_Estruc = ((int)(inValues[15]));
            string PayOff = ((string)(inValues[16]));
            string Estruct_Indiv = ((string)(inValues[17]));
            int enumSetPricing = ((int)(inValues[18]));
            return ((AdminOpciones.SrvSmile.SrvSmileSoap)(this)).BeginOpcionVanilla(BsSpot_BsFwd, strikes_delta_flag, paridad, call_put_flag, compraVenta, nominal, spot, spot_smile, puntos, strike_delta, fecha_val, FechaVenc, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, numComponente_Estruc, PayOff, Estruct_Indiv, enumSetPricing, callback, asyncState);
        }
        
        private object[] OnEndOpcionVanilla(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvSmile.SrvSmileSoap)(this)).EndOpcionVanilla(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOpcionVanillaCompleted(object state) {
            if ((this.OpcionVanillaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpcionVanillaCompleted(this, new OpcionVanillaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpcionVanillaAsync(
                    string BsSpot_BsFwd, 
                    string strikes_delta_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double spot_smile, 
                    double puntos, 
                    double strike_delta, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int numComponente_Estruc, 
                    string PayOff, 
                    string Estruct_Indiv, 
                    int enumSetPricing) {
            this.OpcionVanillaAsync(BsSpot_BsFwd, strikes_delta_flag, paridad, call_put_flag, compraVenta, nominal, spot, spot_smile, puntos, strike_delta, fecha_val, FechaVenc, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, numComponente_Estruc, PayOff, Estruct_Indiv, enumSetPricing, null);
        }
        
        public void OpcionVanillaAsync(
                    string BsSpot_BsFwd, 
                    string strikes_delta_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double spot_smile, 
                    double puntos, 
                    double strike_delta, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int numComponente_Estruc, 
                    string PayOff, 
                    string Estruct_Indiv, 
                    int enumSetPricing, 
                    object userState) {
            if ((this.onBeginOpcionVanillaDelegate == null)) {
                this.onBeginOpcionVanillaDelegate = new BeginOperationDelegate(this.OnBeginOpcionVanilla);
            }
            if ((this.onEndOpcionVanillaDelegate == null)) {
                this.onEndOpcionVanillaDelegate = new EndOperationDelegate(this.OnEndOpcionVanilla);
            }
            if ((this.onOpcionVanillaCompletedDelegate == null)) {
                this.onOpcionVanillaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpcionVanillaCompleted);
            }
            base.InvokeAsync(this.onBeginOpcionVanillaDelegate, new object[] {
                        BsSpot_BsFwd,
                        strikes_delta_flag,
                        paridad,
                        call_put_flag,
                        compraVenta,
                        nominal,
                        spot,
                        spot_smile,
                        puntos,
                        strike_delta,
                        fecha_val,
                        FechaVenc,
                        FechaSetDePrecios,
                        YieldNameCurvaDom,
                        YieldNameCurvaFor,
                        numComponente_Estruc,
                        PayOff,
                        Estruct_Indiv,
                        enumSetPricing}, this.onEndOpcionVanillaDelegate, this.onOpcionVanillaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvSmile.SrvSmileSoap.BeginSolver_CallPut_Vanilla(
                    string BsSpot_BsFwd_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double puntos, 
                    double strike, 
                    double MtM_objetivo, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSolver_CallPut_Vanilla(BsSpot_BsFwd_flag, paridad, call_put_flag, compraVenta, nominal, spot, puntos, strike, MtM_objetivo, fecha_val, FechaVenc, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPricing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvSmile.SrvSmileSoap.EndSolver_CallPut_Vanilla(System.IAsyncResult result) {
            return base.Channel.EndSolver_CallPut_Vanilla(result);
        }
        
        private System.IAsyncResult OnBeginSolver_CallPut_Vanilla(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string BsSpot_BsFwd_flag = ((string)(inValues[0]));
            string paridad = ((string)(inValues[1]));
            string call_put_flag = ((string)(inValues[2]));
            string compraVenta = ((string)(inValues[3]));
            double nominal = ((double)(inValues[4]));
            double spot = ((double)(inValues[5]));
            double puntos = ((double)(inValues[6]));
            double strike = ((double)(inValues[7]));
            double MtM_objetivo = ((double)(inValues[8]));
            System.DateTime fecha_val = ((System.DateTime)(inValues[9]));
            System.DateTime FechaVenc = ((System.DateTime)(inValues[10]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[11]));
            string YieldNameCurvaDom = ((string)(inValues[12]));
            string YieldNameCurvaFor = ((string)(inValues[13]));
            int enumSetPricing = ((int)(inValues[14]));
            return ((AdminOpciones.SrvSmile.SrvSmileSoap)(this)).BeginSolver_CallPut_Vanilla(BsSpot_BsFwd_flag, paridad, call_put_flag, compraVenta, nominal, spot, puntos, strike, MtM_objetivo, fecha_val, FechaVenc, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPricing, callback, asyncState);
        }
        
        private object[] OnEndSolver_CallPut_Vanilla(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvSmile.SrvSmileSoap)(this)).EndSolver_CallPut_Vanilla(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_CallPut_VanillaCompleted(object state) {
            if ((this.Solver_CallPut_VanillaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_CallPut_VanillaCompleted(this, new Solver_CallPut_VanillaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_CallPut_VanillaAsync(string BsSpot_BsFwd_flag, string paridad, string call_put_flag, string compraVenta, double nominal, double spot, double puntos, double strike, double MtM_objetivo, System.DateTime fecha_val, System.DateTime FechaVenc, System.DateTime FechaSetDePrecios, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPricing) {
            this.Solver_CallPut_VanillaAsync(BsSpot_BsFwd_flag, paridad, call_put_flag, compraVenta, nominal, spot, puntos, strike, MtM_objetivo, fecha_val, FechaVenc, FechaSetDePrecios, YieldNameCurvaDom, YieldNameCurvaFor, enumSetPricing, null);
        }
        
        public void Solver_CallPut_VanillaAsync(
                    string BsSpot_BsFwd_flag, 
                    string paridad, 
                    string call_put_flag, 
                    string compraVenta, 
                    double nominal, 
                    double spot, 
                    double puntos, 
                    double strike, 
                    double MtM_objetivo, 
                    System.DateTime fecha_val, 
                    System.DateTime FechaVenc, 
                    System.DateTime FechaSetDePrecios, 
                    string YieldNameCurvaDom, 
                    string YieldNameCurvaFor, 
                    int enumSetPricing, 
                    object userState) {
            if ((this.onBeginSolver_CallPut_VanillaDelegate == null)) {
                this.onBeginSolver_CallPut_VanillaDelegate = new BeginOperationDelegate(this.OnBeginSolver_CallPut_Vanilla);
            }
            if ((this.onEndSolver_CallPut_VanillaDelegate == null)) {
                this.onEndSolver_CallPut_VanillaDelegate = new EndOperationDelegate(this.OnEndSolver_CallPut_Vanilla);
            }
            if ((this.onSolver_CallPut_VanillaCompletedDelegate == null)) {
                this.onSolver_CallPut_VanillaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_CallPut_VanillaCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_CallPut_VanillaDelegate, new object[] {
                        BsSpot_BsFwd_flag,
                        paridad,
                        call_put_flag,
                        compraVenta,
                        nominal,
                        spot,
                        puntos,
                        strike,
                        MtM_objetivo,
                        fecha_val,
                        FechaVenc,
                        FechaSetDePrecios,
                        YieldNameCurvaDom,
                        YieldNameCurvaFor,
                        enumSetPricing}, this.onEndSolver_CallPut_VanillaDelegate, this.onSolver_CallPut_VanillaCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AdminOpciones.SrvSmile.SrvSmileSoap CreateChannel() {
            return new SrvSmileSoapClientChannel(this);
        }
        
        private class SrvSmileSoapClientChannel : ChannelBase<AdminOpciones.SrvSmile.SrvSmileSoap>, AdminOpciones.SrvSmile.SrvSmileSoap {
            
            public SrvSmileSoapClientChannel(System.ServiceModel.ClientBase<AdminOpciones.SrvSmile.SrvSmileSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginFwd_Delta(string paridad, string call_put_flag, string compra_venta, double nominal, double spot, double strike, System.DateTime fecha_val, System.DateTime fecha_vencimiento, System.DateTime FechaSetDePrecios, string YieldNameCurvaDom, string YieldNameCurvaFor, int enumSetPricing, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[12];
                _args[0] = paridad;
                _args[1] = call_put_flag;
                _args[2] = compra_venta;
                _args[3] = nominal;
                _args[4] = spot;
                _args[5] = strike;
                _args[6] = fecha_val;
                _args[7] = fecha_vencimiento;
                _args[8] = FechaSetDePrecios;
                _args[9] = YieldNameCurvaDom;
                _args[10] = YieldNameCurvaFor;
                _args[11] = enumSetPricing;
                System.IAsyncResult _result = base.BeginInvoke("Fwd_Delta", _args, callback, asyncState);
                return _result;
            }
            
            public double EndFwd_Delta(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Fwd_Delta", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOpcionVanilla(
                        string BsSpot_BsFwd, 
                        string strikes_delta_flag, 
                        string paridad, 
                        string call_put_flag, 
                        string compraVenta, 
                        double nominal, 
                        double spot, 
                        double spot_smile, 
                        double puntos, 
                        double strike_delta, 
                        System.DateTime fecha_val, 
                        System.DateTime FechaVenc, 
                        System.DateTime FechaSetDePrecios, 
                        string YieldNameCurvaDom, 
                        string YieldNameCurvaFor, 
                        int numComponente_Estruc, 
                        string PayOff, 
                        string Estruct_Indiv, 
                        int enumSetPricing, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[19];
                _args[0] = BsSpot_BsFwd;
                _args[1] = strikes_delta_flag;
                _args[2] = paridad;
                _args[3] = call_put_flag;
                _args[4] = compraVenta;
                _args[5] = nominal;
                _args[6] = spot;
                _args[7] = spot_smile;
                _args[8] = puntos;
                _args[9] = strike_delta;
                _args[10] = fecha_val;
                _args[11] = FechaVenc;
                _args[12] = FechaSetDePrecios;
                _args[13] = YieldNameCurvaDom;
                _args[14] = YieldNameCurvaFor;
                _args[15] = numComponente_Estruc;
                _args[16] = PayOff;
                _args[17] = Estruct_Indiv;
                _args[18] = enumSetPricing;
                System.IAsyncResult _result = base.BeginInvoke("OpcionVanilla", _args, callback, asyncState);
                return _result;
            }
            
            public string EndOpcionVanilla(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("OpcionVanilla", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_CallPut_Vanilla(
                        string BsSpot_BsFwd_flag, 
                        string paridad, 
                        string call_put_flag, 
                        string compraVenta, 
                        double nominal, 
                        double spot, 
                        double puntos, 
                        double strike, 
                        double MtM_objetivo, 
                        System.DateTime fecha_val, 
                        System.DateTime FechaVenc, 
                        System.DateTime FechaSetDePrecios, 
                        string YieldNameCurvaDom, 
                        string YieldNameCurvaFor, 
                        int enumSetPricing, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[15];
                _args[0] = BsSpot_BsFwd_flag;
                _args[1] = paridad;
                _args[2] = call_put_flag;
                _args[3] = compraVenta;
                _args[4] = nominal;
                _args[5] = spot;
                _args[6] = puntos;
                _args[7] = strike;
                _args[8] = MtM_objetivo;
                _args[9] = fecha_val;
                _args[10] = FechaVenc;
                _args[11] = FechaSetDePrecios;
                _args[12] = YieldNameCurvaDom;
                _args[13] = YieldNameCurvaFor;
                _args[14] = enumSetPricing;
                System.IAsyncResult _result = base.BeginInvoke("Solver_CallPut_Vanilla", _args, callback, asyncState);
                return _result;
            }
            
            public double EndSolver_CallPut_Vanilla(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Solver_CallPut_Vanilla", _args, result)));
                return _result;
            }
        }
    }
}
