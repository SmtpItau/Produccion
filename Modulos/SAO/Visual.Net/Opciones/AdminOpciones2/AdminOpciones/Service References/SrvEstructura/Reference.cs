//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.225
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace AdminOpciones.SrvEstructura {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SrvEstructura.SrvEstructuraSoap")]
    public interface SrvEstructuraSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ForwardSintetico", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginForwardSintetico(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndForwardSintetico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_FwdSintetico", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_FwdSintetico(
                    double price_objective, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        double EndSolver_FwdSintetico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Straddle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginStraddle(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndStraddle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Strangle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginStrangle(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndStrangle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Butterfly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginButterfly(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    bool VegaWeighted, 
                    double NocionalStrangle, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndButterfly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RiskReversal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRiskReversal(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndRiskReversal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ForwardAmericano", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginForwardAmericano(string value, System.AsyncCallback callback, object asyncState);
        
        string EndForwardAmericano(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/TestForwardAmericano", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginTestForwardAmericano(System.AsyncCallback callback, object asyncState);
        
        string EndTestForwardAmericano(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_RiskReversal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_RiskReversal(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        double EndSolver_RiskReversal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ForwardGananciaAcotada", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginForwardGananciaAcotada(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndForwardGananciaAcotada(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ForwardPerdidaAcotada", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginForwardPerdidaAcotada(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndForwardPerdidaAcotada(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_FwdAcotado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_FwdAcotado(
                    double price_objective, 
                    string Puntos_Cota, 
                    string Perdida_Ganancia, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    double spotFwd, 
                    double putnosFwd, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        double EndSolver_FwdAcotado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_ForwardAmericano", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_ForwardAmericano(string value, System.AsyncCallback callback, object asyncState);
        
        string EndSolver_ForwardAmericano(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/StripAsiatico", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginStripAsiatico(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    string xmlStrip, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndStripAsiatico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_StripAsiatico", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_StripAsiatico(
                    double MtM_objetivo, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    string xmlStrip, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        double EndSolver_StripAsiatico(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CallPutSpread", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCallPutSpread(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstructura, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndCallPutSpread(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_CallPutSpread", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_CallPutSpread(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstruct, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        double EndSolver_CallPutSpread(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ForwardAsiaticoEntradaSalida", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginForwardAsiaticoEntradaSalida(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndForwardAsiaticoEntradaSalida(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CallSpreadDoble", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCallSpreadDoble(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndCallSpreadDoble(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_CallSpreadDoble", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_CallSpreadDoble(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstruct, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        double EndSolver_CallSpreadDoble(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Solver_ForwardAsiaticoEntradaSalida", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSolver_ForwardAsiaticoEntradaSalida(
                    double price_objective, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        double EndSolver_ForwardAsiaticoEntradaSalida(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SrvEstructuraSoapChannel : AdminOpciones.SrvEstructura.SrvEstructuraSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForwardSinteticoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ForwardSinteticoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_FwdSinteticoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_FwdSinteticoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StraddleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StraddleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StrangleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StrangleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ButterflyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ButterflyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RiskReversalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RiskReversalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForwardAmericanoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ForwardAmericanoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestForwardAmericanoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestForwardAmericanoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_RiskReversalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_RiskReversalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForwardGananciaAcotadaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ForwardGananciaAcotadaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForwardPerdidaAcotadaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ForwardPerdidaAcotadaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_FwdAcotadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_FwdAcotadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_ForwardAmericanoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_ForwardAmericanoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StripAsiaticoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StripAsiaticoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_StripAsiaticoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_StripAsiaticoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CallPutSpreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CallPutSpreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_CallPutSpreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_CallPutSpreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForwardAsiaticoEntradaSalidaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ForwardAsiaticoEntradaSalidaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CallSpreadDobleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CallSpreadDobleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_CallSpreadDobleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_CallSpreadDobleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Solver_ForwardAsiaticoEntradaSalidaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Solver_ForwardAsiaticoEntradaSalidaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SrvEstructuraSoapClient : System.ServiceModel.ClientBase<AdminOpciones.SrvEstructura.SrvEstructuraSoap>, AdminOpciones.SrvEstructura.SrvEstructuraSoap {
        
        private BeginOperationDelegate onBeginForwardSinteticoDelegate;
        
        private EndOperationDelegate onEndForwardSinteticoDelegate;
        
        private System.Threading.SendOrPostCallback onForwardSinteticoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_FwdSinteticoDelegate;
        
        private EndOperationDelegate onEndSolver_FwdSinteticoDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_FwdSinteticoCompletedDelegate;
        
        private BeginOperationDelegate onBeginStraddleDelegate;
        
        private EndOperationDelegate onEndStraddleDelegate;
        
        private System.Threading.SendOrPostCallback onStraddleCompletedDelegate;
        
        private BeginOperationDelegate onBeginStrangleDelegate;
        
        private EndOperationDelegate onEndStrangleDelegate;
        
        private System.Threading.SendOrPostCallback onStrangleCompletedDelegate;
        
        private BeginOperationDelegate onBeginButterflyDelegate;
        
        private EndOperationDelegate onEndButterflyDelegate;
        
        private System.Threading.SendOrPostCallback onButterflyCompletedDelegate;
        
        private BeginOperationDelegate onBeginRiskReversalDelegate;
        
        private EndOperationDelegate onEndRiskReversalDelegate;
        
        private System.Threading.SendOrPostCallback onRiskReversalCompletedDelegate;
        
        private BeginOperationDelegate onBeginForwardAmericanoDelegate;
        
        private EndOperationDelegate onEndForwardAmericanoDelegate;
        
        private System.Threading.SendOrPostCallback onForwardAmericanoCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestForwardAmericanoDelegate;
        
        private EndOperationDelegate onEndTestForwardAmericanoDelegate;
        
        private System.Threading.SendOrPostCallback onTestForwardAmericanoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_RiskReversalDelegate;
        
        private EndOperationDelegate onEndSolver_RiskReversalDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_RiskReversalCompletedDelegate;
        
        private BeginOperationDelegate onBeginForwardGananciaAcotadaDelegate;
        
        private EndOperationDelegate onEndForwardGananciaAcotadaDelegate;
        
        private System.Threading.SendOrPostCallback onForwardGananciaAcotadaCompletedDelegate;
        
        private BeginOperationDelegate onBeginForwardPerdidaAcotadaDelegate;
        
        private EndOperationDelegate onEndForwardPerdidaAcotadaDelegate;
        
        private System.Threading.SendOrPostCallback onForwardPerdidaAcotadaCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_FwdAcotadoDelegate;
        
        private EndOperationDelegate onEndSolver_FwdAcotadoDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_FwdAcotadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_ForwardAmericanoDelegate;
        
        private EndOperationDelegate onEndSolver_ForwardAmericanoDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_ForwardAmericanoCompletedDelegate;
        
        private BeginOperationDelegate onBeginStripAsiaticoDelegate;
        
        private EndOperationDelegate onEndStripAsiaticoDelegate;
        
        private System.Threading.SendOrPostCallback onStripAsiaticoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_StripAsiaticoDelegate;
        
        private EndOperationDelegate onEndSolver_StripAsiaticoDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_StripAsiaticoCompletedDelegate;
        
        private BeginOperationDelegate onBeginCallPutSpreadDelegate;
        
        private EndOperationDelegate onEndCallPutSpreadDelegate;
        
        private System.Threading.SendOrPostCallback onCallPutSpreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_CallPutSpreadDelegate;
        
        private EndOperationDelegate onEndSolver_CallPutSpreadDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_CallPutSpreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginForwardAsiaticoEntradaSalidaDelegate;
        
        private EndOperationDelegate onEndForwardAsiaticoEntradaSalidaDelegate;
        
        private System.Threading.SendOrPostCallback onForwardAsiaticoEntradaSalidaCompletedDelegate;
        
        private BeginOperationDelegate onBeginCallSpreadDobleDelegate;
        
        private EndOperationDelegate onEndCallSpreadDobleDelegate;
        
        private System.Threading.SendOrPostCallback onCallSpreadDobleCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_CallSpreadDobleDelegate;
        
        private EndOperationDelegate onEndSolver_CallSpreadDobleDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_CallSpreadDobleCompletedDelegate;
        
        private BeginOperationDelegate onBeginSolver_ForwardAsiaticoEntradaSalidaDelegate;
        
        private EndOperationDelegate onEndSolver_ForwardAsiaticoEntradaSalidaDelegate;
        
        private System.Threading.SendOrPostCallback onSolver_ForwardAsiaticoEntradaSalidaCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SrvEstructuraSoapClient() {
        }
        
        public SrvEstructuraSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SrvEstructuraSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvEstructuraSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvEstructuraSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("No se puede establecer el objeto CookieContainer. Asegúrese de que el enlace cont" +
                            "iene un objeto HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ForwardSinteticoCompletedEventArgs> ForwardSinteticoCompleted;
        
        public event System.EventHandler<Solver_FwdSinteticoCompletedEventArgs> Solver_FwdSinteticoCompleted;
        
        public event System.EventHandler<StraddleCompletedEventArgs> StraddleCompleted;
        
        public event System.EventHandler<StrangleCompletedEventArgs> StrangleCompleted;
        
        public event System.EventHandler<ButterflyCompletedEventArgs> ButterflyCompleted;
        
        public event System.EventHandler<RiskReversalCompletedEventArgs> RiskReversalCompleted;
        
        public event System.EventHandler<ForwardAmericanoCompletedEventArgs> ForwardAmericanoCompleted;
        
        public event System.EventHandler<TestForwardAmericanoCompletedEventArgs> TestForwardAmericanoCompleted;
        
        public event System.EventHandler<Solver_RiskReversalCompletedEventArgs> Solver_RiskReversalCompleted;
        
        public event System.EventHandler<ForwardGananciaAcotadaCompletedEventArgs> ForwardGananciaAcotadaCompleted;
        
        public event System.EventHandler<ForwardPerdidaAcotadaCompletedEventArgs> ForwardPerdidaAcotadaCompleted;
        
        public event System.EventHandler<Solver_FwdAcotadoCompletedEventArgs> Solver_FwdAcotadoCompleted;
        
        public event System.EventHandler<Solver_ForwardAmericanoCompletedEventArgs> Solver_ForwardAmericanoCompleted;
        
        public event System.EventHandler<StripAsiaticoCompletedEventArgs> StripAsiaticoCompleted;
        
        public event System.EventHandler<Solver_StripAsiaticoCompletedEventArgs> Solver_StripAsiaticoCompleted;
        
        public event System.EventHandler<CallPutSpreadCompletedEventArgs> CallPutSpreadCompleted;
        
        public event System.EventHandler<Solver_CallPutSpreadCompletedEventArgs> Solver_CallPutSpreadCompleted;
        
        public event System.EventHandler<ForwardAsiaticoEntradaSalidaCompletedEventArgs> ForwardAsiaticoEntradaSalidaCompleted;
        
        public event System.EventHandler<CallSpreadDobleCompletedEventArgs> CallSpreadDobleCompleted;
        
        public event System.EventHandler<Solver_CallSpreadDobleCompletedEventArgs> Solver_CallSpreadDobleCompleted;
        
        public event System.EventHandler<Solver_ForwardAsiaticoEntradaSalidaCompletedEventArgs> Solver_ForwardAsiaticoEntradaSalidaCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginForwardSintetico(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginForwardSintetico(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndForwardSintetico(System.IAsyncResult result) {
            return base.Channel.EndForwardSintetico(result);
        }
        
        private System.IAsyncResult OnBeginForwardSintetico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntosCosto = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotsmile = ((double)(inValues[15]));
            string Strikes_Delta_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int enumSetPricing = ((int)(inValues[19]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginForwardSintetico(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, callback, asyncState);
        }
        
        private object[] OnEndForwardSintetico(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndForwardSintetico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnForwardSinteticoCompleted(object state) {
            if ((this.ForwardSinteticoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForwardSinteticoCompleted(this, new ForwardSinteticoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForwardSinteticoAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing) {
            this.ForwardSinteticoAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, null);
        }
        
        public void ForwardSinteticoAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    object userState) {
            if ((this.onBeginForwardSinteticoDelegate == null)) {
                this.onBeginForwardSinteticoDelegate = new BeginOperationDelegate(this.OnBeginForwardSintetico);
            }
            if ((this.onEndForwardSinteticoDelegate == null)) {
                this.onEndForwardSinteticoDelegate = new EndOperationDelegate(this.OnEndForwardSintetico);
            }
            if ((this.onForwardSinteticoCompletedDelegate == null)) {
                this.onForwardSinteticoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForwardSinteticoCompleted);
            }
            base.InvokeAsync(this.onBeginForwardSinteticoDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntosCosto,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strikes_Delta_XML,
                        YieldNameDom,
                        YieldNameFor,
                        enumSetPricing}, this.onEndForwardSinteticoDelegate, this.onForwardSinteticoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginSolver_FwdSintetico(
                    double price_objective, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSolver_FwdSintetico(price_objective, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndSolver_FwdSintetico(System.IAsyncResult result) {
            return base.Channel.EndSolver_FwdSintetico(result);
        }
        
        private System.IAsyncResult OnBeginSolver_FwdSintetico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double price_objective = ((double)(inValues[0]));
            string strikes_delta_flag = ((string)(inValues[1]));
            string vanilla_asiatica = ((string)(inValues[2]));
            string BsSpot_BsFwd = ((string)(inValues[3]));
            string Fijaciones = ((string)(inValues[4]));
            string estructura = ((string)(inValues[5]));
            string payoff = ((string)(inValues[6]));
            double puntos_fwd_costo = ((double)(inValues[7]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[8]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[9]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            string Strike_Delta_Values_XML = ((string)(inValues[15]));
            string YieldNameDom = ((string)(inValues[16]));
            string YieldNameFor = ((string)(inValues[17]));
            int setPrecios = ((int)(inValues[18]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginSolver_FwdSintetico(price_objective, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndSolver_FwdSintetico(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndSolver_FwdSintetico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_FwdSinteticoCompleted(object state) {
            if ((this.Solver_FwdSinteticoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_FwdSinteticoCompleted(this, new Solver_FwdSinteticoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_FwdSinteticoAsync(
                    double price_objective, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.Solver_FwdSinteticoAsync(price_objective, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void Solver_FwdSinteticoAsync(
                    double price_objective, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginSolver_FwdSinteticoDelegate == null)) {
                this.onBeginSolver_FwdSinteticoDelegate = new BeginOperationDelegate(this.OnBeginSolver_FwdSintetico);
            }
            if ((this.onEndSolver_FwdSinteticoDelegate == null)) {
                this.onEndSolver_FwdSinteticoDelegate = new EndOperationDelegate(this.OnEndSolver_FwdSintetico);
            }
            if ((this.onSolver_FwdSinteticoCompletedDelegate == null)) {
                this.onSolver_FwdSinteticoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_FwdSinteticoCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_FwdSinteticoDelegate, new object[] {
                        price_objective,
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndSolver_FwdSinteticoDelegate, this.onSolver_FwdSinteticoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginStraddle(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginStraddle(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndStraddle(System.IAsyncResult result) {
            return base.Channel.EndStraddle(result);
        }
        
        private System.IAsyncResult OnBeginStraddle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntos_fwd_costo = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotsmile = ((double)(inValues[15]));
            string Strikes_Delta_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int setPrecios = ((int)(inValues[19]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginStraddle(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndStraddle(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndStraddle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStraddleCompleted(object state) {
            if ((this.StraddleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StraddleCompleted(this, new StraddleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StraddleAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.StraddleAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void StraddleAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginStraddleDelegate == null)) {
                this.onBeginStraddleDelegate = new BeginOperationDelegate(this.OnBeginStraddle);
            }
            if ((this.onEndStraddleDelegate == null)) {
                this.onEndStraddleDelegate = new EndOperationDelegate(this.OnEndStraddle);
            }
            if ((this.onStraddleCompletedDelegate == null)) {
                this.onStraddleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStraddleCompleted);
            }
            base.InvokeAsync(this.onBeginStraddleDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strikes_Delta_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndStraddleDelegate, this.onStraddleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginStrangle(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginStrangle(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndStrangle(System.IAsyncResult result) {
            return base.Channel.EndStrangle(result);
        }
        
        private System.IAsyncResult OnBeginStrangle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntos_fwd_costo = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotsmile = ((double)(inValues[15]));
            string Strike_Delta_Values_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int setPrecios = ((int)(inValues[19]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginStrangle(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndStrangle(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndStrangle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStrangleCompleted(object state) {
            if ((this.StrangleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StrangleCompleted(this, new StrangleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StrangleAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.StrangleAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void StrangleAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginStrangleDelegate == null)) {
                this.onBeginStrangleDelegate = new BeginOperationDelegate(this.OnBeginStrangle);
            }
            if ((this.onEndStrangleDelegate == null)) {
                this.onEndStrangleDelegate = new EndOperationDelegate(this.OnEndStrangle);
            }
            if ((this.onStrangleCompletedDelegate == null)) {
                this.onStrangleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStrangleCompleted);
            }
            base.InvokeAsync(this.onBeginStrangleDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndStrangleDelegate, this.onStrangleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginButterfly(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    bool VegaWeighted, 
                    double NocionalStrangle, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginButterfly(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, VegaWeighted, NocionalStrangle, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndButterfly(System.IAsyncResult result) {
            return base.Channel.EndButterfly(result);
        }
        
        private System.IAsyncResult OnBeginButterfly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            bool VegaWeighted = ((bool)(inValues[5]));
            double NocionalStrangle = ((double)(inValues[6]));
            string payoff = ((string)(inValues[7]));
            double puntos_fwd_costo = ((double)(inValues[8]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[9]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[10]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[11]));
            string call_put = ((string)(inValues[12]));
            string paridad = ((string)(inValues[13]));
            string compra_venta = ((string)(inValues[14]));
            double nocional = ((double)(inValues[15]));
            double spot = ((double)(inValues[16]));
            double spotsmile = ((double)(inValues[17]));
            string Strike_Delta_Values_XML = ((string)(inValues[18]));
            string YieldNameDom = ((string)(inValues[19]));
            string YieldNameFor = ((string)(inValues[20]));
            int setPrecios = ((int)(inValues[21]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginButterfly(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, VegaWeighted, NocionalStrangle, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndButterfly(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndButterfly(result);
            return new object[] {
                    retVal};
        }
        
        private void OnButterflyCompleted(object state) {
            if ((this.ButterflyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ButterflyCompleted(this, new ButterflyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ButterflyAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    bool VegaWeighted, 
                    double NocionalStrangle, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.ButterflyAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, VegaWeighted, NocionalStrangle, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void ButterflyAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    bool VegaWeighted, 
                    double NocionalStrangle, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginButterflyDelegate == null)) {
                this.onBeginButterflyDelegate = new BeginOperationDelegate(this.OnBeginButterfly);
            }
            if ((this.onEndButterflyDelegate == null)) {
                this.onEndButterflyDelegate = new EndOperationDelegate(this.OnEndButterfly);
            }
            if ((this.onButterflyCompletedDelegate == null)) {
                this.onButterflyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnButterflyCompleted);
            }
            base.InvokeAsync(this.onBeginButterflyDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        VegaWeighted,
                        NocionalStrangle,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndButterflyDelegate, this.onButterflyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginRiskReversal(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginRiskReversal(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotSmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndRiskReversal(System.IAsyncResult result) {
            return base.Channel.EndRiskReversal(result);
        }
        
        private System.IAsyncResult OnBeginRiskReversal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntos_fwd_costo = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotSmile = ((double)(inValues[15]));
            string Strike_Delta_Values_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int setPrecios = ((int)(inValues[19]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginRiskReversal(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotSmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndRiskReversal(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndRiskReversal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRiskReversalCompleted(object state) {
            if ((this.RiskReversalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RiskReversalCompleted(this, new RiskReversalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RiskReversalAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.RiskReversalAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotSmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void RiskReversalAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginRiskReversalDelegate == null)) {
                this.onBeginRiskReversalDelegate = new BeginOperationDelegate(this.OnBeginRiskReversal);
            }
            if ((this.onEndRiskReversalDelegate == null)) {
                this.onEndRiskReversalDelegate = new EndOperationDelegate(this.OnEndRiskReversal);
            }
            if ((this.onRiskReversalCompletedDelegate == null)) {
                this.onRiskReversalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRiskReversalCompleted);
            }
            base.InvokeAsync(this.onBeginRiskReversalDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotSmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndRiskReversalDelegate, this.onRiskReversalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginForwardAmericano(string value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginForwardAmericano(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndForwardAmericano(System.IAsyncResult result) {
            return base.Channel.EndForwardAmericano(result);
        }
        
        private System.IAsyncResult OnBeginForwardAmericano(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string value = ((string)(inValues[0]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginForwardAmericano(value, callback, asyncState);
        }
        
        private object[] OnEndForwardAmericano(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndForwardAmericano(result);
            return new object[] {
                    retVal};
        }
        
        private void OnForwardAmericanoCompleted(object state) {
            if ((this.ForwardAmericanoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForwardAmericanoCompleted(this, new ForwardAmericanoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForwardAmericanoAsync(string value) {
            this.ForwardAmericanoAsync(value, null);
        }
        
        public void ForwardAmericanoAsync(string value, object userState) {
            if ((this.onBeginForwardAmericanoDelegate == null)) {
                this.onBeginForwardAmericanoDelegate = new BeginOperationDelegate(this.OnBeginForwardAmericano);
            }
            if ((this.onEndForwardAmericanoDelegate == null)) {
                this.onEndForwardAmericanoDelegate = new EndOperationDelegate(this.OnEndForwardAmericano);
            }
            if ((this.onForwardAmericanoCompletedDelegate == null)) {
                this.onForwardAmericanoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForwardAmericanoCompleted);
            }
            base.InvokeAsync(this.onBeginForwardAmericanoDelegate, new object[] {
                        value}, this.onEndForwardAmericanoDelegate, this.onForwardAmericanoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginTestForwardAmericano(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestForwardAmericano(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndTestForwardAmericano(System.IAsyncResult result) {
            return base.Channel.EndTestForwardAmericano(result);
        }
        
        private System.IAsyncResult OnBeginTestForwardAmericano(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginTestForwardAmericano(callback, asyncState);
        }
        
        private object[] OnEndTestForwardAmericano(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndTestForwardAmericano(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestForwardAmericanoCompleted(object state) {
            if ((this.TestForwardAmericanoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestForwardAmericanoCompleted(this, new TestForwardAmericanoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestForwardAmericanoAsync() {
            this.TestForwardAmericanoAsync(null);
        }
        
        public void TestForwardAmericanoAsync(object userState) {
            if ((this.onBeginTestForwardAmericanoDelegate == null)) {
                this.onBeginTestForwardAmericanoDelegate = new BeginOperationDelegate(this.OnBeginTestForwardAmericano);
            }
            if ((this.onEndTestForwardAmericanoDelegate == null)) {
                this.onEndTestForwardAmericanoDelegate = new EndOperationDelegate(this.OnEndTestForwardAmericano);
            }
            if ((this.onTestForwardAmericanoCompletedDelegate == null)) {
                this.onTestForwardAmericanoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestForwardAmericanoCompleted);
            }
            base.InvokeAsync(this.onBeginTestForwardAmericanoDelegate, null, this.onEndTestForwardAmericanoDelegate, this.onTestForwardAmericanoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginSolver_RiskReversal(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSolver_RiskReversal(price_objective, Ceiling_Floor, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndSolver_RiskReversal(System.IAsyncResult result) {
            return base.Channel.EndSolver_RiskReversal(result);
        }
        
        private System.IAsyncResult OnBeginSolver_RiskReversal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double price_objective = ((double)(inValues[0]));
            string Ceiling_Floor = ((string)(inValues[1]));
            string strikes_delta_flag = ((string)(inValues[2]));
            string vanilla_asiatica = ((string)(inValues[3]));
            string BsSpot_BsFwd = ((string)(inValues[4]));
            string Fijaciones = ((string)(inValues[5]));
            string estructura = ((string)(inValues[6]));
            string payoff = ((string)(inValues[7]));
            double puntos_fwd_costo = ((double)(inValues[8]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[9]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[10]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[11]));
            string paridad = ((string)(inValues[12]));
            string compra_venta = ((string)(inValues[13]));
            double nocional = ((double)(inValues[14]));
            double spot = ((double)(inValues[15]));
            double spotsmile = ((double)(inValues[16]));
            string Strike_Delta_Values_XML = ((string)(inValues[17]));
            string YieldNameDom = ((string)(inValues[18]));
            string YieldNameFor = ((string)(inValues[19]));
            int setPrecios = ((int)(inValues[20]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginSolver_RiskReversal(price_objective, Ceiling_Floor, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndSolver_RiskReversal(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndSolver_RiskReversal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_RiskReversalCompleted(object state) {
            if ((this.Solver_RiskReversalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_RiskReversalCompleted(this, new Solver_RiskReversalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_RiskReversalAsync(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.Solver_RiskReversalAsync(price_objective, Ceiling_Floor, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void Solver_RiskReversalAsync(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginSolver_RiskReversalDelegate == null)) {
                this.onBeginSolver_RiskReversalDelegate = new BeginOperationDelegate(this.OnBeginSolver_RiskReversal);
            }
            if ((this.onEndSolver_RiskReversalDelegate == null)) {
                this.onEndSolver_RiskReversalDelegate = new EndOperationDelegate(this.OnEndSolver_RiskReversal);
            }
            if ((this.onSolver_RiskReversalCompletedDelegate == null)) {
                this.onSolver_RiskReversalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_RiskReversalCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_RiskReversalDelegate, new object[] {
                        price_objective,
                        Ceiling_Floor,
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndSolver_RiskReversalDelegate, this.onSolver_RiskReversalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginForwardGananciaAcotada(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginForwardGananciaAcotada(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndForwardGananciaAcotada(System.IAsyncResult result) {
            return base.Channel.EndForwardGananciaAcotada(result);
        }
        
        private System.IAsyncResult OnBeginForwardGananciaAcotada(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntosCosto = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotsmile = ((double)(inValues[15]));
            string Strike_Delta_Values_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int setPrecios = ((int)(inValues[19]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginForwardGananciaAcotada(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndForwardGananciaAcotada(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndForwardGananciaAcotada(result);
            return new object[] {
                    retVal};
        }
        
        private void OnForwardGananciaAcotadaCompleted(object state) {
            if ((this.ForwardGananciaAcotadaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForwardGananciaAcotadaCompleted(this, new ForwardGananciaAcotadaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForwardGananciaAcotadaAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.ForwardGananciaAcotadaAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void ForwardGananciaAcotadaAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginForwardGananciaAcotadaDelegate == null)) {
                this.onBeginForwardGananciaAcotadaDelegate = new BeginOperationDelegate(this.OnBeginForwardGananciaAcotada);
            }
            if ((this.onEndForwardGananciaAcotadaDelegate == null)) {
                this.onEndForwardGananciaAcotadaDelegate = new EndOperationDelegate(this.OnEndForwardGananciaAcotada);
            }
            if ((this.onForwardGananciaAcotadaCompletedDelegate == null)) {
                this.onForwardGananciaAcotadaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForwardGananciaAcotadaCompleted);
            }
            base.InvokeAsync(this.onBeginForwardGananciaAcotadaDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntosCosto,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndForwardGananciaAcotadaDelegate, this.onForwardGananciaAcotadaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginForwardPerdidaAcotada(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginForwardPerdidaAcotada(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndForwardPerdidaAcotada(System.IAsyncResult result) {
            return base.Channel.EndForwardPerdidaAcotada(result);
        }
        
        private System.IAsyncResult OnBeginForwardPerdidaAcotada(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntos_fwd_costo = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotsmile = ((double)(inValues[15]));
            string Strike_Delta_Values_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int setPrecios = ((int)(inValues[19]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginForwardPerdidaAcotada(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndForwardPerdidaAcotada(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndForwardPerdidaAcotada(result);
            return new object[] {
                    retVal};
        }
        
        private void OnForwardPerdidaAcotadaCompleted(object state) {
            if ((this.ForwardPerdidaAcotadaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForwardPerdidaAcotadaCompleted(this, new ForwardPerdidaAcotadaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForwardPerdidaAcotadaAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.ForwardPerdidaAcotadaAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void ForwardPerdidaAcotadaAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginForwardPerdidaAcotadaDelegate == null)) {
                this.onBeginForwardPerdidaAcotadaDelegate = new BeginOperationDelegate(this.OnBeginForwardPerdidaAcotada);
            }
            if ((this.onEndForwardPerdidaAcotadaDelegate == null)) {
                this.onEndForwardPerdidaAcotadaDelegate = new EndOperationDelegate(this.OnEndForwardPerdidaAcotada);
            }
            if ((this.onForwardPerdidaAcotadaCompletedDelegate == null)) {
                this.onForwardPerdidaAcotadaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForwardPerdidaAcotadaCompleted);
            }
            base.InvokeAsync(this.onBeginForwardPerdidaAcotadaDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndForwardPerdidaAcotadaDelegate, this.onForwardPerdidaAcotadaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginSolver_FwdAcotado(
                    double price_objective, 
                    string Puntos_Cota, 
                    string Perdida_Ganancia, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    double spotFwd, 
                    double putnosFwd, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSolver_FwdAcotado(price_objective, Puntos_Cota, Perdida_Ganancia, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, spotFwd, putnosFwd, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndSolver_FwdAcotado(System.IAsyncResult result) {
            return base.Channel.EndSolver_FwdAcotado(result);
        }
        
        private System.IAsyncResult OnBeginSolver_FwdAcotado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double price_objective = ((double)(inValues[0]));
            string Puntos_Cota = ((string)(inValues[1]));
            string Perdida_Ganancia = ((string)(inValues[2]));
            string strikes_delta_flag = ((string)(inValues[3]));
            string vanilla_asiatica = ((string)(inValues[4]));
            string BsSpot_BsFwd = ((string)(inValues[5]));
            string Fijaciones = ((string)(inValues[6]));
            string estructura = ((string)(inValues[7]));
            string payoff = ((string)(inValues[8]));
            double puntos_fwd_costo = ((double)(inValues[9]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[10]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[11]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[12]));
            string call_put = ((string)(inValues[13]));
            string paridad = ((string)(inValues[14]));
            string compra_venta = ((string)(inValues[15]));
            double nocional = ((double)(inValues[16]));
            double spot = ((double)(inValues[17]));
            double spotsmile = ((double)(inValues[18]));
            string Strike_Delta_Values_XML = ((string)(inValues[19]));
            string YieldNameDom = ((string)(inValues[20]));
            string YieldNameFor = ((string)(inValues[21]));
            double spotFwd = ((double)(inValues[22]));
            double putnosFwd = ((double)(inValues[23]));
            int setPrecios = ((int)(inValues[24]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginSolver_FwdAcotado(price_objective, Puntos_Cota, Perdida_Ganancia, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, spotFwd, putnosFwd, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndSolver_FwdAcotado(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndSolver_FwdAcotado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_FwdAcotadoCompleted(object state) {
            if ((this.Solver_FwdAcotadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_FwdAcotadoCompleted(this, new Solver_FwdAcotadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_FwdAcotadoAsync(
                    double price_objective, 
                    string Puntos_Cota, 
                    string Perdida_Ganancia, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    double spotFwd, 
                    double putnosFwd, 
                    int setPrecios) {
            this.Solver_FwdAcotadoAsync(price_objective, Puntos_Cota, Perdida_Ganancia, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, spotFwd, putnosFwd, setPrecios, null);
        }
        
        public void Solver_FwdAcotadoAsync(
                    double price_objective, 
                    string Puntos_Cota, 
                    string Perdida_Ganancia, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    double spotFwd, 
                    double putnosFwd, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginSolver_FwdAcotadoDelegate == null)) {
                this.onBeginSolver_FwdAcotadoDelegate = new BeginOperationDelegate(this.OnBeginSolver_FwdAcotado);
            }
            if ((this.onEndSolver_FwdAcotadoDelegate == null)) {
                this.onEndSolver_FwdAcotadoDelegate = new EndOperationDelegate(this.OnEndSolver_FwdAcotado);
            }
            if ((this.onSolver_FwdAcotadoCompletedDelegate == null)) {
                this.onSolver_FwdAcotadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_FwdAcotadoCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_FwdAcotadoDelegate, new object[] {
                        price_objective,
                        Puntos_Cota,
                        Perdida_Ganancia,
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        spotFwd,
                        putnosFwd,
                        setPrecios}, this.onEndSolver_FwdAcotadoDelegate, this.onSolver_FwdAcotadoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginSolver_ForwardAmericano(string value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSolver_ForwardAmericano(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndSolver_ForwardAmericano(System.IAsyncResult result) {
            return base.Channel.EndSolver_ForwardAmericano(result);
        }
        
        private System.IAsyncResult OnBeginSolver_ForwardAmericano(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string value = ((string)(inValues[0]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginSolver_ForwardAmericano(value, callback, asyncState);
        }
        
        private object[] OnEndSolver_ForwardAmericano(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndSolver_ForwardAmericano(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_ForwardAmericanoCompleted(object state) {
            if ((this.Solver_ForwardAmericanoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_ForwardAmericanoCompleted(this, new Solver_ForwardAmericanoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_ForwardAmericanoAsync(string value) {
            this.Solver_ForwardAmericanoAsync(value, null);
        }
        
        public void Solver_ForwardAmericanoAsync(string value, object userState) {
            if ((this.onBeginSolver_ForwardAmericanoDelegate == null)) {
                this.onBeginSolver_ForwardAmericanoDelegate = new BeginOperationDelegate(this.OnBeginSolver_ForwardAmericano);
            }
            if ((this.onEndSolver_ForwardAmericanoDelegate == null)) {
                this.onEndSolver_ForwardAmericanoDelegate = new EndOperationDelegate(this.OnEndSolver_ForwardAmericano);
            }
            if ((this.onSolver_ForwardAmericanoCompletedDelegate == null)) {
                this.onSolver_ForwardAmericanoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_ForwardAmericanoCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_ForwardAmericanoDelegate, new object[] {
                        value}, this.onEndSolver_ForwardAmericanoDelegate, this.onSolver_ForwardAmericanoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginStripAsiatico(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    string xmlStrip, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginStripAsiatico(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, xmlStrip, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndStripAsiatico(System.IAsyncResult result) {
            return base.Channel.EndStripAsiatico(result);
        }
        
        private System.IAsyncResult OnBeginStripAsiatico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntosCosto = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotsmile = ((double)(inValues[15]));
            string Strikes_Delta_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int enumSetPricing = ((int)(inValues[19]));
            string xmlStrip = ((string)(inValues[20]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginStripAsiatico(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, xmlStrip, callback, asyncState);
        }
        
        private object[] OnEndStripAsiatico(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndStripAsiatico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStripAsiaticoCompleted(object state) {
            if ((this.StripAsiaticoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StripAsiaticoCompleted(this, new StripAsiaticoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StripAsiaticoAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    string xmlStrip) {
            this.StripAsiaticoAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, xmlStrip, null);
        }
        
        public void StripAsiaticoAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    string xmlStrip, 
                    object userState) {
            if ((this.onBeginStripAsiaticoDelegate == null)) {
                this.onBeginStripAsiaticoDelegate = new BeginOperationDelegate(this.OnBeginStripAsiatico);
            }
            if ((this.onEndStripAsiaticoDelegate == null)) {
                this.onEndStripAsiaticoDelegate = new EndOperationDelegate(this.OnEndStripAsiatico);
            }
            if ((this.onStripAsiaticoCompletedDelegate == null)) {
                this.onStripAsiaticoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStripAsiaticoCompleted);
            }
            base.InvokeAsync(this.onBeginStripAsiaticoDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntosCosto,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strikes_Delta_XML,
                        YieldNameDom,
                        YieldNameFor,
                        enumSetPricing,
                        xmlStrip}, this.onEndStripAsiaticoDelegate, this.onStripAsiaticoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginSolver_StripAsiatico(
                    double MtM_objetivo, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    string xmlStrip, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSolver_StripAsiatico(MtM_objetivo, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, xmlStrip, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndSolver_StripAsiatico(System.IAsyncResult result) {
            return base.Channel.EndSolver_StripAsiatico(result);
        }
        
        private System.IAsyncResult OnBeginSolver_StripAsiatico(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double MtM_objetivo = ((double)(inValues[0]));
            string strikes_delta_flag = ((string)(inValues[1]));
            string vanilla_asiatica = ((string)(inValues[2]));
            string BsSpot_BsFwd = ((string)(inValues[3]));
            string Fijaciones = ((string)(inValues[4]));
            string estructura = ((string)(inValues[5]));
            string payoff = ((string)(inValues[6]));
            double puntosCosto = ((double)(inValues[7]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[8]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[9]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[10]));
            string call_put = ((string)(inValues[11]));
            string paridad = ((string)(inValues[12]));
            string compra_venta = ((string)(inValues[13]));
            double nocional = ((double)(inValues[14]));
            double spot = ((double)(inValues[15]));
            double spotsmile = ((double)(inValues[16]));
            string Strikes_Delta_XML = ((string)(inValues[17]));
            string YieldNameDom = ((string)(inValues[18]));
            string YieldNameFor = ((string)(inValues[19]));
            int enumSetPricing = ((int)(inValues[20]));
            string xmlStrip = ((string)(inValues[21]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginSolver_StripAsiatico(MtM_objetivo, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, xmlStrip, callback, asyncState);
        }
        
        private object[] OnEndSolver_StripAsiatico(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndSolver_StripAsiatico(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_StripAsiaticoCompleted(object state) {
            if ((this.Solver_StripAsiaticoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_StripAsiaticoCompleted(this, new Solver_StripAsiaticoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_StripAsiaticoAsync(
                    double MtM_objetivo, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    string xmlStrip) {
            this.Solver_StripAsiaticoAsync(MtM_objetivo, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, xmlStrip, null);
        }
        
        public void Solver_StripAsiaticoAsync(
                    double MtM_objetivo, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    string xmlStrip, 
                    object userState) {
            if ((this.onBeginSolver_StripAsiaticoDelegate == null)) {
                this.onBeginSolver_StripAsiaticoDelegate = new BeginOperationDelegate(this.OnBeginSolver_StripAsiatico);
            }
            if ((this.onEndSolver_StripAsiaticoDelegate == null)) {
                this.onEndSolver_StripAsiaticoDelegate = new EndOperationDelegate(this.OnEndSolver_StripAsiatico);
            }
            if ((this.onSolver_StripAsiaticoCompletedDelegate == null)) {
                this.onSolver_StripAsiaticoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_StripAsiaticoCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_StripAsiaticoDelegate, new object[] {
                        MtM_objetivo,
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntosCosto,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strikes_Delta_XML,
                        YieldNameDom,
                        YieldNameFor,
                        enumSetPricing,
                        xmlStrip}, this.onEndSolver_StripAsiaticoDelegate, this.onSolver_StripAsiaticoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginCallPutSpread(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstructura, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginCallPutSpread(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotSmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, TipoEstructura, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndCallPutSpread(System.IAsyncResult result) {
            return base.Channel.EndCallPutSpread(result);
        }
        
        private System.IAsyncResult OnBeginCallPutSpread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntos_fwd_costo = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotSmile = ((double)(inValues[15]));
            string Strike_Delta_Values_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int setPrecios = ((int)(inValues[19]));
            string TipoEstructura = ((string)(inValues[20]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginCallPutSpread(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotSmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, TipoEstructura, callback, asyncState);
        }
        
        private object[] OnEndCallPutSpread(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndCallPutSpread(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCallPutSpreadCompleted(object state) {
            if ((this.CallPutSpreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CallPutSpreadCompleted(this, new CallPutSpreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CallPutSpreadAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstructura) {
            this.CallPutSpreadAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotSmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, TipoEstructura, null);
        }
        
        public void CallPutSpreadAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstructura, 
                    object userState) {
            if ((this.onBeginCallPutSpreadDelegate == null)) {
                this.onBeginCallPutSpreadDelegate = new BeginOperationDelegate(this.OnBeginCallPutSpread);
            }
            if ((this.onEndCallPutSpreadDelegate == null)) {
                this.onEndCallPutSpreadDelegate = new EndOperationDelegate(this.OnEndCallPutSpread);
            }
            if ((this.onCallPutSpreadCompletedDelegate == null)) {
                this.onCallPutSpreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCallPutSpreadCompleted);
            }
            base.InvokeAsync(this.onBeginCallPutSpreadDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotSmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios,
                        TipoEstructura}, this.onEndCallPutSpreadDelegate, this.onCallPutSpreadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginSolver_CallPutSpread(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstruct, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSolver_CallPutSpread(price_objective, Ceiling_Floor, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, TipoEstruct, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndSolver_CallPutSpread(System.IAsyncResult result) {
            return base.Channel.EndSolver_CallPutSpread(result);
        }
        
        private System.IAsyncResult OnBeginSolver_CallPutSpread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double price_objective = ((double)(inValues[0]));
            string Ceiling_Floor = ((string)(inValues[1]));
            string strikes_delta_flag = ((string)(inValues[2]));
            string vanilla_asiatica = ((string)(inValues[3]));
            string BsSpot_BsFwd = ((string)(inValues[4]));
            string Fijaciones = ((string)(inValues[5]));
            string estructura = ((string)(inValues[6]));
            string payoff = ((string)(inValues[7]));
            double puntos_fwd_costo = ((double)(inValues[8]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[9]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[10]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[11]));
            string paridad = ((string)(inValues[12]));
            string compra_venta = ((string)(inValues[13]));
            double nocional = ((double)(inValues[14]));
            double spot = ((double)(inValues[15]));
            double spotsmile = ((double)(inValues[16]));
            string Strike_Delta_Values_XML = ((string)(inValues[17]));
            string YieldNameDom = ((string)(inValues[18]));
            string YieldNameFor = ((string)(inValues[19]));
            int setPrecios = ((int)(inValues[20]));
            string TipoEstruct = ((string)(inValues[21]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginSolver_CallPutSpread(price_objective, Ceiling_Floor, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, TipoEstruct, callback, asyncState);
        }
        
        private object[] OnEndSolver_CallPutSpread(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndSolver_CallPutSpread(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_CallPutSpreadCompleted(object state) {
            if ((this.Solver_CallPutSpreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_CallPutSpreadCompleted(this, new Solver_CallPutSpreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_CallPutSpreadAsync(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstruct) {
            this.Solver_CallPutSpreadAsync(price_objective, Ceiling_Floor, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, TipoEstruct, null);
        }
        
        public void Solver_CallPutSpreadAsync(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstruct, 
                    object userState) {
            if ((this.onBeginSolver_CallPutSpreadDelegate == null)) {
                this.onBeginSolver_CallPutSpreadDelegate = new BeginOperationDelegate(this.OnBeginSolver_CallPutSpread);
            }
            if ((this.onEndSolver_CallPutSpreadDelegate == null)) {
                this.onEndSolver_CallPutSpreadDelegate = new EndOperationDelegate(this.OnEndSolver_CallPutSpread);
            }
            if ((this.onSolver_CallPutSpreadCompletedDelegate == null)) {
                this.onSolver_CallPutSpreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_CallPutSpreadCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_CallPutSpreadDelegate, new object[] {
                        price_objective,
                        Ceiling_Floor,
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios,
                        TipoEstruct}, this.onEndSolver_CallPutSpreadDelegate, this.onSolver_CallPutSpreadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginForwardAsiaticoEntradaSalida(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginForwardAsiaticoEntradaSalida(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndForwardAsiaticoEntradaSalida(System.IAsyncResult result) {
            return base.Channel.EndForwardAsiaticoEntradaSalida(result);
        }
        
        private System.IAsyncResult OnBeginForwardAsiaticoEntradaSalida(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntosCosto = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotsmile = ((double)(inValues[15]));
            string Strikes_Delta_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int enumSetPricing = ((int)(inValues[19]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginForwardAsiaticoEntradaSalida(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, callback, asyncState);
        }
        
        private object[] OnEndForwardAsiaticoEntradaSalida(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndForwardAsiaticoEntradaSalida(result);
            return new object[] {
                    retVal};
        }
        
        private void OnForwardAsiaticoEntradaSalidaCompleted(object state) {
            if ((this.ForwardAsiaticoEntradaSalidaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForwardAsiaticoEntradaSalidaCompleted(this, new ForwardAsiaticoEntradaSalidaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForwardAsiaticoEntradaSalidaAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing) {
            this.ForwardAsiaticoEntradaSalidaAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntosCosto, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotsmile, Strikes_Delta_XML, YieldNameDom, YieldNameFor, enumSetPricing, null);
        }
        
        public void ForwardAsiaticoEntradaSalidaAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntosCosto, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strikes_Delta_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int enumSetPricing, 
                    object userState) {
            if ((this.onBeginForwardAsiaticoEntradaSalidaDelegate == null)) {
                this.onBeginForwardAsiaticoEntradaSalidaDelegate = new BeginOperationDelegate(this.OnBeginForwardAsiaticoEntradaSalida);
            }
            if ((this.onEndForwardAsiaticoEntradaSalidaDelegate == null)) {
                this.onEndForwardAsiaticoEntradaSalidaDelegate = new EndOperationDelegate(this.OnEndForwardAsiaticoEntradaSalida);
            }
            if ((this.onForwardAsiaticoEntradaSalidaCompletedDelegate == null)) {
                this.onForwardAsiaticoEntradaSalidaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForwardAsiaticoEntradaSalidaCompleted);
            }
            base.InvokeAsync(this.onBeginForwardAsiaticoEntradaSalidaDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntosCosto,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strikes_Delta_XML,
                        YieldNameDom,
                        YieldNameFor,
                        enumSetPricing}, this.onEndForwardAsiaticoEntradaSalidaDelegate, this.onForwardAsiaticoEntradaSalidaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginCallSpreadDoble(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginCallSpreadDoble(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotSmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndCallSpreadDoble(System.IAsyncResult result) {
            return base.Channel.EndCallSpreadDoble(result);
        }
        
        private System.IAsyncResult OnBeginCallSpreadDoble(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strikes_delta_flag = ((string)(inValues[0]));
            string vanilla_asiatica = ((string)(inValues[1]));
            string BsSpot_BsFwd = ((string)(inValues[2]));
            string Fijaciones = ((string)(inValues[3]));
            string estructura = ((string)(inValues[4]));
            string payoff = ((string)(inValues[5]));
            double puntos_fwd_costo = ((double)(inValues[6]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[7]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[8]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[9]));
            string call_put = ((string)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            double spotSmile = ((double)(inValues[15]));
            string Strike_Delta_Values_XML = ((string)(inValues[16]));
            string YieldNameDom = ((string)(inValues[17]));
            string YieldNameFor = ((string)(inValues[18]));
            int setPrecios = ((int)(inValues[19]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginCallSpreadDoble(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotSmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndCallSpreadDoble(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndCallSpreadDoble(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCallSpreadDobleCompleted(object state) {
            if ((this.CallSpreadDobleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CallSpreadDobleCompleted(this, new CallSpreadDobleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CallSpreadDobleAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.CallSpreadDobleAsync(strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, call_put, paridad, compra_venta, nocional, spot, spotSmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void CallSpreadDobleAsync(
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string call_put, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotSmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginCallSpreadDobleDelegate == null)) {
                this.onBeginCallSpreadDobleDelegate = new BeginOperationDelegate(this.OnBeginCallSpreadDoble);
            }
            if ((this.onEndCallSpreadDobleDelegate == null)) {
                this.onEndCallSpreadDobleDelegate = new EndOperationDelegate(this.OnEndCallSpreadDoble);
            }
            if ((this.onCallSpreadDobleCompletedDelegate == null)) {
                this.onCallSpreadDobleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCallSpreadDobleCompleted);
            }
            base.InvokeAsync(this.onBeginCallSpreadDobleDelegate, new object[] {
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        call_put,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotSmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndCallSpreadDobleDelegate, this.onCallSpreadDobleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginSolver_CallSpreadDoble(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstruct, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSolver_CallSpreadDoble(price_objective, Ceiling_Floor, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, TipoEstruct, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndSolver_CallSpreadDoble(System.IAsyncResult result) {
            return base.Channel.EndSolver_CallSpreadDoble(result);
        }
        
        private System.IAsyncResult OnBeginSolver_CallSpreadDoble(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double price_objective = ((double)(inValues[0]));
            string Ceiling_Floor = ((string)(inValues[1]));
            string strikes_delta_flag = ((string)(inValues[2]));
            string vanilla_asiatica = ((string)(inValues[3]));
            string BsSpot_BsFwd = ((string)(inValues[4]));
            string Fijaciones = ((string)(inValues[5]));
            string estructura = ((string)(inValues[6]));
            string payoff = ((string)(inValues[7]));
            double puntos_fwd_costo = ((double)(inValues[8]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[9]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[10]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[11]));
            string paridad = ((string)(inValues[12]));
            string compra_venta = ((string)(inValues[13]));
            double nocional = ((double)(inValues[14]));
            double spot = ((double)(inValues[15]));
            double spotsmile = ((double)(inValues[16]));
            string Strike_Delta_Values_XML = ((string)(inValues[17]));
            string YieldNameDom = ((string)(inValues[18]));
            string YieldNameFor = ((string)(inValues[19]));
            int setPrecios = ((int)(inValues[20]));
            string TipoEstruct = ((string)(inValues[21]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginSolver_CallSpreadDoble(price_objective, Ceiling_Floor, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, TipoEstruct, callback, asyncState);
        }
        
        private object[] OnEndSolver_CallSpreadDoble(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndSolver_CallSpreadDoble(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_CallSpreadDobleCompleted(object state) {
            if ((this.Solver_CallSpreadDobleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_CallSpreadDobleCompleted(this, new Solver_CallSpreadDobleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_CallSpreadDobleAsync(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstruct) {
            this.Solver_CallSpreadDobleAsync(price_objective, Ceiling_Floor, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, spotsmile, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, TipoEstruct, null);
        }
        
        public void Solver_CallSpreadDobleAsync(
                    double price_objective, 
                    string Ceiling_Floor, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    double spotsmile, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    string TipoEstruct, 
                    object userState) {
            if ((this.onBeginSolver_CallSpreadDobleDelegate == null)) {
                this.onBeginSolver_CallSpreadDobleDelegate = new BeginOperationDelegate(this.OnBeginSolver_CallSpreadDoble);
            }
            if ((this.onEndSolver_CallSpreadDobleDelegate == null)) {
                this.onEndSolver_CallSpreadDobleDelegate = new EndOperationDelegate(this.OnEndSolver_CallSpreadDoble);
            }
            if ((this.onSolver_CallSpreadDobleCompletedDelegate == null)) {
                this.onSolver_CallSpreadDobleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_CallSpreadDobleCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_CallSpreadDobleDelegate, new object[] {
                        price_objective,
                        Ceiling_Floor,
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        spotsmile,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios,
                        TipoEstruct}, this.onEndSolver_CallSpreadDobleDelegate, this.onSolver_CallSpreadDobleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvEstructura.SrvEstructuraSoap.BeginSolver_ForwardAsiaticoEntradaSalida(
                    double price_objective, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSolver_ForwardAsiaticoEntradaSalida(price_objective, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvEstructura.SrvEstructuraSoap.EndSolver_ForwardAsiaticoEntradaSalida(System.IAsyncResult result) {
            return base.Channel.EndSolver_ForwardAsiaticoEntradaSalida(result);
        }
        
        private System.IAsyncResult OnBeginSolver_ForwardAsiaticoEntradaSalida(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double price_objective = ((double)(inValues[0]));
            string strikes_delta_flag = ((string)(inValues[1]));
            string vanilla_asiatica = ((string)(inValues[2]));
            string BsSpot_BsFwd = ((string)(inValues[3]));
            string Fijaciones = ((string)(inValues[4]));
            string estructura = ((string)(inValues[5]));
            string payoff = ((string)(inValues[6]));
            double puntos_fwd_costo = ((double)(inValues[7]));
            System.DateTime fecha_Val = ((System.DateTime)(inValues[8]));
            System.DateTime fecha_Vencto = ((System.DateTime)(inValues[9]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[10]));
            string paridad = ((string)(inValues[11]));
            string compra_venta = ((string)(inValues[12]));
            double nocional = ((double)(inValues[13]));
            double spot = ((double)(inValues[14]));
            string Strike_Delta_Values_XML = ((string)(inValues[15]));
            string YieldNameDom = ((string)(inValues[16]));
            string YieldNameFor = ((string)(inValues[17]));
            int setPrecios = ((int)(inValues[18]));
            return ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).BeginSolver_ForwardAsiaticoEntradaSalida(price_objective, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, callback, asyncState);
        }
        
        private object[] OnEndSolver_ForwardAsiaticoEntradaSalida(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvEstructura.SrvEstructuraSoap)(this)).EndSolver_ForwardAsiaticoEntradaSalida(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSolver_ForwardAsiaticoEntradaSalidaCompleted(object state) {
            if ((this.Solver_ForwardAsiaticoEntradaSalidaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Solver_ForwardAsiaticoEntradaSalidaCompleted(this, new Solver_ForwardAsiaticoEntradaSalidaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Solver_ForwardAsiaticoEntradaSalidaAsync(
                    double price_objective, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios) {
            this.Solver_ForwardAsiaticoEntradaSalidaAsync(price_objective, strikes_delta_flag, vanilla_asiatica, BsSpot_BsFwd, Fijaciones, estructura, payoff, puntos_fwd_costo, fecha_Val, fecha_Vencto, FechaSetDePrecios, paridad, compra_venta, nocional, spot, Strike_Delta_Values_XML, YieldNameDom, YieldNameFor, setPrecios, null);
        }
        
        public void Solver_ForwardAsiaticoEntradaSalidaAsync(
                    double price_objective, 
                    string strikes_delta_flag, 
                    string vanilla_asiatica, 
                    string BsSpot_BsFwd, 
                    string Fijaciones, 
                    string estructura, 
                    string payoff, 
                    double puntos_fwd_costo, 
                    System.DateTime fecha_Val, 
                    System.DateTime fecha_Vencto, 
                    System.DateTime FechaSetDePrecios, 
                    string paridad, 
                    string compra_venta, 
                    double nocional, 
                    double spot, 
                    string Strike_Delta_Values_XML, 
                    string YieldNameDom, 
                    string YieldNameFor, 
                    int setPrecios, 
                    object userState) {
            if ((this.onBeginSolver_ForwardAsiaticoEntradaSalidaDelegate == null)) {
                this.onBeginSolver_ForwardAsiaticoEntradaSalidaDelegate = new BeginOperationDelegate(this.OnBeginSolver_ForwardAsiaticoEntradaSalida);
            }
            if ((this.onEndSolver_ForwardAsiaticoEntradaSalidaDelegate == null)) {
                this.onEndSolver_ForwardAsiaticoEntradaSalidaDelegate = new EndOperationDelegate(this.OnEndSolver_ForwardAsiaticoEntradaSalida);
            }
            if ((this.onSolver_ForwardAsiaticoEntradaSalidaCompletedDelegate == null)) {
                this.onSolver_ForwardAsiaticoEntradaSalidaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSolver_ForwardAsiaticoEntradaSalidaCompleted);
            }
            base.InvokeAsync(this.onBeginSolver_ForwardAsiaticoEntradaSalidaDelegate, new object[] {
                        price_objective,
                        strikes_delta_flag,
                        vanilla_asiatica,
                        BsSpot_BsFwd,
                        Fijaciones,
                        estructura,
                        payoff,
                        puntos_fwd_costo,
                        fecha_Val,
                        fecha_Vencto,
                        FechaSetDePrecios,
                        paridad,
                        compra_venta,
                        nocional,
                        spot,
                        Strike_Delta_Values_XML,
                        YieldNameDom,
                        YieldNameFor,
                        setPrecios}, this.onEndSolver_ForwardAsiaticoEntradaSalidaDelegate, this.onSolver_ForwardAsiaticoEntradaSalidaCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AdminOpciones.SrvEstructura.SrvEstructuraSoap CreateChannel() {
            return new SrvEstructuraSoapClientChannel(this);
        }
        
        private class SrvEstructuraSoapClientChannel : ChannelBase<AdminOpciones.SrvEstructura.SrvEstructuraSoap>, AdminOpciones.SrvEstructura.SrvEstructuraSoap {
            
            public SrvEstructuraSoapClientChannel(System.ServiceModel.ClientBase<AdminOpciones.SrvEstructura.SrvEstructuraSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginForwardSintetico(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntosCosto, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strikes_Delta_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int enumSetPricing, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[20];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntosCosto;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotsmile;
                _args[16] = Strikes_Delta_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = enumSetPricing;
                System.IAsyncResult _result = base.BeginInvoke("ForwardSintetico", _args, callback, asyncState);
                return _result;
            }
            
            public string EndForwardSintetico(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ForwardSintetico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_FwdSintetico(
                        double price_objective, 
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[19];
                _args[0] = price_objective;
                _args[1] = strikes_delta_flag;
                _args[2] = vanilla_asiatica;
                _args[3] = BsSpot_BsFwd;
                _args[4] = Fijaciones;
                _args[5] = estructura;
                _args[6] = payoff;
                _args[7] = puntos_fwd_costo;
                _args[8] = fecha_Val;
                _args[9] = fecha_Vencto;
                _args[10] = FechaSetDePrecios;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = Strike_Delta_Values_XML;
                _args[16] = YieldNameDom;
                _args[17] = YieldNameFor;
                _args[18] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("Solver_FwdSintetico", _args, callback, asyncState);
                return _result;
            }
            
            public double EndSolver_FwdSintetico(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Solver_FwdSintetico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStraddle(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strikes_Delta_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[20];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntos_fwd_costo;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotsmile;
                _args[16] = Strikes_Delta_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("Straddle", _args, callback, asyncState);
                return _result;
            }
            
            public string EndStraddle(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Straddle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStrangle(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[20];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntos_fwd_costo;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotsmile;
                _args[16] = Strike_Delta_Values_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("Strangle", _args, callback, asyncState);
                return _result;
            }
            
            public string EndStrangle(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Strangle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginButterfly(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        bool VegaWeighted, 
                        double NocionalStrangle, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[22];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = VegaWeighted;
                _args[6] = NocionalStrangle;
                _args[7] = payoff;
                _args[8] = puntos_fwd_costo;
                _args[9] = fecha_Val;
                _args[10] = fecha_Vencto;
                _args[11] = FechaSetDePrecios;
                _args[12] = call_put;
                _args[13] = paridad;
                _args[14] = compra_venta;
                _args[15] = nocional;
                _args[16] = spot;
                _args[17] = spotsmile;
                _args[18] = Strike_Delta_Values_XML;
                _args[19] = YieldNameDom;
                _args[20] = YieldNameFor;
                _args[21] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("Butterfly", _args, callback, asyncState);
                return _result;
            }
            
            public string EndButterfly(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Butterfly", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRiskReversal(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotSmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[20];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntos_fwd_costo;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotSmile;
                _args[16] = Strike_Delta_Values_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("RiskReversal", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRiskReversal(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RiskReversal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginForwardAmericano(string value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("ForwardAmericano", _args, callback, asyncState);
                return _result;
            }
            
            public string EndForwardAmericano(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ForwardAmericano", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTestForwardAmericano(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("TestForwardAmericano", _args, callback, asyncState);
                return _result;
            }
            
            public string EndTestForwardAmericano(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("TestForwardAmericano", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_RiskReversal(
                        double price_objective, 
                        string Ceiling_Floor, 
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[21];
                _args[0] = price_objective;
                _args[1] = Ceiling_Floor;
                _args[2] = strikes_delta_flag;
                _args[3] = vanilla_asiatica;
                _args[4] = BsSpot_BsFwd;
                _args[5] = Fijaciones;
                _args[6] = estructura;
                _args[7] = payoff;
                _args[8] = puntos_fwd_costo;
                _args[9] = fecha_Val;
                _args[10] = fecha_Vencto;
                _args[11] = FechaSetDePrecios;
                _args[12] = paridad;
                _args[13] = compra_venta;
                _args[14] = nocional;
                _args[15] = spot;
                _args[16] = spotsmile;
                _args[17] = Strike_Delta_Values_XML;
                _args[18] = YieldNameDom;
                _args[19] = YieldNameFor;
                _args[20] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("Solver_RiskReversal", _args, callback, asyncState);
                return _result;
            }
            
            public double EndSolver_RiskReversal(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Solver_RiskReversal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginForwardGananciaAcotada(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntosCosto, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[20];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntosCosto;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotsmile;
                _args[16] = Strike_Delta_Values_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("ForwardGananciaAcotada", _args, callback, asyncState);
                return _result;
            }
            
            public string EndForwardGananciaAcotada(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ForwardGananciaAcotada", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginForwardPerdidaAcotada(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[20];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntos_fwd_costo;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotsmile;
                _args[16] = Strike_Delta_Values_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("ForwardPerdidaAcotada", _args, callback, asyncState);
                return _result;
            }
            
            public string EndForwardPerdidaAcotada(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ForwardPerdidaAcotada", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_FwdAcotado(
                        double price_objective, 
                        string Puntos_Cota, 
                        string Perdida_Ganancia, 
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        double spotFwd, 
                        double putnosFwd, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[25];
                _args[0] = price_objective;
                _args[1] = Puntos_Cota;
                _args[2] = Perdida_Ganancia;
                _args[3] = strikes_delta_flag;
                _args[4] = vanilla_asiatica;
                _args[5] = BsSpot_BsFwd;
                _args[6] = Fijaciones;
                _args[7] = estructura;
                _args[8] = payoff;
                _args[9] = puntos_fwd_costo;
                _args[10] = fecha_Val;
                _args[11] = fecha_Vencto;
                _args[12] = FechaSetDePrecios;
                _args[13] = call_put;
                _args[14] = paridad;
                _args[15] = compra_venta;
                _args[16] = nocional;
                _args[17] = spot;
                _args[18] = spotsmile;
                _args[19] = Strike_Delta_Values_XML;
                _args[20] = YieldNameDom;
                _args[21] = YieldNameFor;
                _args[22] = spotFwd;
                _args[23] = putnosFwd;
                _args[24] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("Solver_FwdAcotado", _args, callback, asyncState);
                return _result;
            }
            
            public double EndSolver_FwdAcotado(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Solver_FwdAcotado", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_ForwardAmericano(string value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("Solver_ForwardAmericano", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSolver_ForwardAmericano(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Solver_ForwardAmericano", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStripAsiatico(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntosCosto, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strikes_Delta_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int enumSetPricing, 
                        string xmlStrip, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[21];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntosCosto;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotsmile;
                _args[16] = Strikes_Delta_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = enumSetPricing;
                _args[20] = xmlStrip;
                System.IAsyncResult _result = base.BeginInvoke("StripAsiatico", _args, callback, asyncState);
                return _result;
            }
            
            public string EndStripAsiatico(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("StripAsiatico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_StripAsiatico(
                        double MtM_objetivo, 
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntosCosto, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strikes_Delta_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int enumSetPricing, 
                        string xmlStrip, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[22];
                _args[0] = MtM_objetivo;
                _args[1] = strikes_delta_flag;
                _args[2] = vanilla_asiatica;
                _args[3] = BsSpot_BsFwd;
                _args[4] = Fijaciones;
                _args[5] = estructura;
                _args[6] = payoff;
                _args[7] = puntosCosto;
                _args[8] = fecha_Val;
                _args[9] = fecha_Vencto;
                _args[10] = FechaSetDePrecios;
                _args[11] = call_put;
                _args[12] = paridad;
                _args[13] = compra_venta;
                _args[14] = nocional;
                _args[15] = spot;
                _args[16] = spotsmile;
                _args[17] = Strikes_Delta_XML;
                _args[18] = YieldNameDom;
                _args[19] = YieldNameFor;
                _args[20] = enumSetPricing;
                _args[21] = xmlStrip;
                System.IAsyncResult _result = base.BeginInvoke("Solver_StripAsiatico", _args, callback, asyncState);
                return _result;
            }
            
            public double EndSolver_StripAsiatico(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Solver_StripAsiatico", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCallPutSpread(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotSmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        string TipoEstructura, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[21];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntos_fwd_costo;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotSmile;
                _args[16] = Strike_Delta_Values_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = setPrecios;
                _args[20] = TipoEstructura;
                System.IAsyncResult _result = base.BeginInvoke("CallPutSpread", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCallPutSpread(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CallPutSpread", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_CallPutSpread(
                        double price_objective, 
                        string Ceiling_Floor, 
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        string TipoEstruct, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[22];
                _args[0] = price_objective;
                _args[1] = Ceiling_Floor;
                _args[2] = strikes_delta_flag;
                _args[3] = vanilla_asiatica;
                _args[4] = BsSpot_BsFwd;
                _args[5] = Fijaciones;
                _args[6] = estructura;
                _args[7] = payoff;
                _args[8] = puntos_fwd_costo;
                _args[9] = fecha_Val;
                _args[10] = fecha_Vencto;
                _args[11] = FechaSetDePrecios;
                _args[12] = paridad;
                _args[13] = compra_venta;
                _args[14] = nocional;
                _args[15] = spot;
                _args[16] = spotsmile;
                _args[17] = Strike_Delta_Values_XML;
                _args[18] = YieldNameDom;
                _args[19] = YieldNameFor;
                _args[20] = setPrecios;
                _args[21] = TipoEstruct;
                System.IAsyncResult _result = base.BeginInvoke("Solver_CallPutSpread", _args, callback, asyncState);
                return _result;
            }
            
            public double EndSolver_CallPutSpread(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Solver_CallPutSpread", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginForwardAsiaticoEntradaSalida(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntosCosto, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strikes_Delta_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int enumSetPricing, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[20];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntosCosto;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotsmile;
                _args[16] = Strikes_Delta_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = enumSetPricing;
                System.IAsyncResult _result = base.BeginInvoke("ForwardAsiaticoEntradaSalida", _args, callback, asyncState);
                return _result;
            }
            
            public string EndForwardAsiaticoEntradaSalida(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ForwardAsiaticoEntradaSalida", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCallSpreadDoble(
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string call_put, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotSmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[20];
                _args[0] = strikes_delta_flag;
                _args[1] = vanilla_asiatica;
                _args[2] = BsSpot_BsFwd;
                _args[3] = Fijaciones;
                _args[4] = estructura;
                _args[5] = payoff;
                _args[6] = puntos_fwd_costo;
                _args[7] = fecha_Val;
                _args[8] = fecha_Vencto;
                _args[9] = FechaSetDePrecios;
                _args[10] = call_put;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = spotSmile;
                _args[16] = Strike_Delta_Values_XML;
                _args[17] = YieldNameDom;
                _args[18] = YieldNameFor;
                _args[19] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("CallSpreadDoble", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCallSpreadDoble(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CallSpreadDoble", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_CallSpreadDoble(
                        double price_objective, 
                        string Ceiling_Floor, 
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        double spotsmile, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        string TipoEstruct, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[22];
                _args[0] = price_objective;
                _args[1] = Ceiling_Floor;
                _args[2] = strikes_delta_flag;
                _args[3] = vanilla_asiatica;
                _args[4] = BsSpot_BsFwd;
                _args[5] = Fijaciones;
                _args[6] = estructura;
                _args[7] = payoff;
                _args[8] = puntos_fwd_costo;
                _args[9] = fecha_Val;
                _args[10] = fecha_Vencto;
                _args[11] = FechaSetDePrecios;
                _args[12] = paridad;
                _args[13] = compra_venta;
                _args[14] = nocional;
                _args[15] = spot;
                _args[16] = spotsmile;
                _args[17] = Strike_Delta_Values_XML;
                _args[18] = YieldNameDom;
                _args[19] = YieldNameFor;
                _args[20] = setPrecios;
                _args[21] = TipoEstruct;
                System.IAsyncResult _result = base.BeginInvoke("Solver_CallSpreadDoble", _args, callback, asyncState);
                return _result;
            }
            
            public double EndSolver_CallSpreadDoble(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Solver_CallSpreadDoble", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSolver_ForwardAsiaticoEntradaSalida(
                        double price_objective, 
                        string strikes_delta_flag, 
                        string vanilla_asiatica, 
                        string BsSpot_BsFwd, 
                        string Fijaciones, 
                        string estructura, 
                        string payoff, 
                        double puntos_fwd_costo, 
                        System.DateTime fecha_Val, 
                        System.DateTime fecha_Vencto, 
                        System.DateTime FechaSetDePrecios, 
                        string paridad, 
                        string compra_venta, 
                        double nocional, 
                        double spot, 
                        string Strike_Delta_Values_XML, 
                        string YieldNameDom, 
                        string YieldNameFor, 
                        int setPrecios, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[19];
                _args[0] = price_objective;
                _args[1] = strikes_delta_flag;
                _args[2] = vanilla_asiatica;
                _args[3] = BsSpot_BsFwd;
                _args[4] = Fijaciones;
                _args[5] = estructura;
                _args[6] = payoff;
                _args[7] = puntos_fwd_costo;
                _args[8] = fecha_Val;
                _args[9] = fecha_Vencto;
                _args[10] = FechaSetDePrecios;
                _args[11] = paridad;
                _args[12] = compra_venta;
                _args[13] = nocional;
                _args[14] = spot;
                _args[15] = Strike_Delta_Values_XML;
                _args[16] = YieldNameDom;
                _args[17] = YieldNameFor;
                _args[18] = setPrecios;
                System.IAsyncResult _result = base.BeginInvoke("Solver_ForwardAsiaticoEntradaSalida", _args, callback, asyncState);
                return _result;
            }
            
            public double EndSolver_ForwardAsiaticoEntradaSalida(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("Solver_ForwardAsiaticoEntradaSalida", _args, result)));
                return _result;
            }
        }
    }
}
