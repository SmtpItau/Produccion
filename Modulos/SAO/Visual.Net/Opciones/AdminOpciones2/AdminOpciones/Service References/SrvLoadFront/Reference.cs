//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.225
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace AdminOpciones.SrvLoadFront {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SrvLoadFront.LoadFrontSoap")]
    public interface LoadFrontSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoadSpot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLoadSpot(int SetPricingLoading, System.DateTime FechaSetdePrecios, System.AsyncCallback callback, object asyncState);
        
        string EndLoadSpot(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PuntosForward", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPuntosForward(System.DateTime fechaVal, System.DateTime fechaVcto, System.DateTime FechaSetDePrecios, double Spot, string CurvaDom, string CurvaFor, int setPricing, System.AsyncCallback callback, object asyncState);
        
        double EndPuntosForward(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoadDateProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLoadDateProcess(System.AsyncCallback callback, object asyncState);
        
        string EndLoadDateProcess(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LoadFrontData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLoadFrontData(System.AsyncCallback callback, object asyncState);
        
        string EndLoadFrontData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LoadFrontSoapChannel : AdminOpciones.SrvLoadFront.LoadFrontSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadSpotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadSpotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PuntosForwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PuntosForwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadDateProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadDateProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadFrontDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadFrontDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadFrontSoapClient : System.ServiceModel.ClientBase<AdminOpciones.SrvLoadFront.LoadFrontSoap>, AdminOpciones.SrvLoadFront.LoadFrontSoap {
        
        private BeginOperationDelegate onBeginLoadSpotDelegate;
        
        private EndOperationDelegate onEndLoadSpotDelegate;
        
        private System.Threading.SendOrPostCallback onLoadSpotCompletedDelegate;
        
        private BeginOperationDelegate onBeginPuntosForwardDelegate;
        
        private EndOperationDelegate onEndPuntosForwardDelegate;
        
        private System.Threading.SendOrPostCallback onPuntosForwardCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadDateProcessDelegate;
        
        private EndOperationDelegate onEndLoadDateProcessDelegate;
        
        private System.Threading.SendOrPostCallback onLoadDateProcessCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadFrontDataDelegate;
        
        private EndOperationDelegate onEndLoadFrontDataDelegate;
        
        private System.Threading.SendOrPostCallback onLoadFrontDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LoadFrontSoapClient() {
        }
        
        public LoadFrontSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoadFrontSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoadFrontSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoadFrontSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("No se puede establecer el objeto CookieContainer. Asegúrese de que el enlace cont" +
                            "iene un objeto HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<LoadSpotCompletedEventArgs> LoadSpotCompleted;
        
        public event System.EventHandler<PuntosForwardCompletedEventArgs> PuntosForwardCompleted;
        
        public event System.EventHandler<LoadDateProcessCompletedEventArgs> LoadDateProcessCompleted;
        
        public event System.EventHandler<LoadFrontDataCompletedEventArgs> LoadFrontDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvLoadFront.LoadFrontSoap.BeginLoadSpot(int SetPricingLoading, System.DateTime FechaSetdePrecios, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadSpot(SetPricingLoading, FechaSetdePrecios, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvLoadFront.LoadFrontSoap.EndLoadSpot(System.IAsyncResult result) {
            return base.Channel.EndLoadSpot(result);
        }
        
        private System.IAsyncResult OnBeginLoadSpot(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int SetPricingLoading = ((int)(inValues[0]));
            System.DateTime FechaSetdePrecios = ((System.DateTime)(inValues[1]));
            return ((AdminOpciones.SrvLoadFront.LoadFrontSoap)(this)).BeginLoadSpot(SetPricingLoading, FechaSetdePrecios, callback, asyncState);
        }
        
        private object[] OnEndLoadSpot(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvLoadFront.LoadFrontSoap)(this)).EndLoadSpot(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadSpotCompleted(object state) {
            if ((this.LoadSpotCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadSpotCompleted(this, new LoadSpotCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadSpotAsync(int SetPricingLoading, System.DateTime FechaSetdePrecios) {
            this.LoadSpotAsync(SetPricingLoading, FechaSetdePrecios, null);
        }
        
        public void LoadSpotAsync(int SetPricingLoading, System.DateTime FechaSetdePrecios, object userState) {
            if ((this.onBeginLoadSpotDelegate == null)) {
                this.onBeginLoadSpotDelegate = new BeginOperationDelegate(this.OnBeginLoadSpot);
            }
            if ((this.onEndLoadSpotDelegate == null)) {
                this.onEndLoadSpotDelegate = new EndOperationDelegate(this.OnEndLoadSpot);
            }
            if ((this.onLoadSpotCompletedDelegate == null)) {
                this.onLoadSpotCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadSpotCompleted);
            }
            base.InvokeAsync(this.onBeginLoadSpotDelegate, new object[] {
                        SetPricingLoading,
                        FechaSetdePrecios}, this.onEndLoadSpotDelegate, this.onLoadSpotCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvLoadFront.LoadFrontSoap.BeginPuntosForward(System.DateTime fechaVal, System.DateTime fechaVcto, System.DateTime FechaSetDePrecios, double Spot, string CurvaDom, string CurvaFor, int setPricing, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPuntosForward(fechaVal, fechaVcto, FechaSetDePrecios, Spot, CurvaDom, CurvaFor, setPricing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        double AdminOpciones.SrvLoadFront.LoadFrontSoap.EndPuntosForward(System.IAsyncResult result) {
            return base.Channel.EndPuntosForward(result);
        }
        
        private System.IAsyncResult OnBeginPuntosForward(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fechaVal = ((System.DateTime)(inValues[0]));
            System.DateTime fechaVcto = ((System.DateTime)(inValues[1]));
            System.DateTime FechaSetDePrecios = ((System.DateTime)(inValues[2]));
            double Spot = ((double)(inValues[3]));
            string CurvaDom = ((string)(inValues[4]));
            string CurvaFor = ((string)(inValues[5]));
            int setPricing = ((int)(inValues[6]));
            return ((AdminOpciones.SrvLoadFront.LoadFrontSoap)(this)).BeginPuntosForward(fechaVal, fechaVcto, FechaSetDePrecios, Spot, CurvaDom, CurvaFor, setPricing, callback, asyncState);
        }
        
        private object[] OnEndPuntosForward(System.IAsyncResult result) {
            double retVal = ((AdminOpciones.SrvLoadFront.LoadFrontSoap)(this)).EndPuntosForward(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPuntosForwardCompleted(object state) {
            if ((this.PuntosForwardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PuntosForwardCompleted(this, new PuntosForwardCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PuntosForwardAsync(System.DateTime fechaVal, System.DateTime fechaVcto, System.DateTime FechaSetDePrecios, double Spot, string CurvaDom, string CurvaFor, int setPricing) {
            this.PuntosForwardAsync(fechaVal, fechaVcto, FechaSetDePrecios, Spot, CurvaDom, CurvaFor, setPricing, null);
        }
        
        public void PuntosForwardAsync(System.DateTime fechaVal, System.DateTime fechaVcto, System.DateTime FechaSetDePrecios, double Spot, string CurvaDom, string CurvaFor, int setPricing, object userState) {
            if ((this.onBeginPuntosForwardDelegate == null)) {
                this.onBeginPuntosForwardDelegate = new BeginOperationDelegate(this.OnBeginPuntosForward);
            }
            if ((this.onEndPuntosForwardDelegate == null)) {
                this.onEndPuntosForwardDelegate = new EndOperationDelegate(this.OnEndPuntosForward);
            }
            if ((this.onPuntosForwardCompletedDelegate == null)) {
                this.onPuntosForwardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPuntosForwardCompleted);
            }
            base.InvokeAsync(this.onBeginPuntosForwardDelegate, new object[] {
                        fechaVal,
                        fechaVcto,
                        FechaSetDePrecios,
                        Spot,
                        CurvaDom,
                        CurvaFor,
                        setPricing}, this.onEndPuntosForwardDelegate, this.onPuntosForwardCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvLoadFront.LoadFrontSoap.BeginLoadDateProcess(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadDateProcess(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvLoadFront.LoadFrontSoap.EndLoadDateProcess(System.IAsyncResult result) {
            return base.Channel.EndLoadDateProcess(result);
        }
        
        private System.IAsyncResult OnBeginLoadDateProcess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((AdminOpciones.SrvLoadFront.LoadFrontSoap)(this)).BeginLoadDateProcess(callback, asyncState);
        }
        
        private object[] OnEndLoadDateProcess(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvLoadFront.LoadFrontSoap)(this)).EndLoadDateProcess(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadDateProcessCompleted(object state) {
            if ((this.LoadDateProcessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadDateProcessCompleted(this, new LoadDateProcessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadDateProcessAsync() {
            this.LoadDateProcessAsync(null);
        }
        
        public void LoadDateProcessAsync(object userState) {
            if ((this.onBeginLoadDateProcessDelegate == null)) {
                this.onBeginLoadDateProcessDelegate = new BeginOperationDelegate(this.OnBeginLoadDateProcess);
            }
            if ((this.onEndLoadDateProcessDelegate == null)) {
                this.onEndLoadDateProcessDelegate = new EndOperationDelegate(this.OnEndLoadDateProcess);
            }
            if ((this.onLoadDateProcessCompletedDelegate == null)) {
                this.onLoadDateProcessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadDateProcessCompleted);
            }
            base.InvokeAsync(this.onBeginLoadDateProcessDelegate, null, this.onEndLoadDateProcessDelegate, this.onLoadDateProcessCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvLoadFront.LoadFrontSoap.BeginLoadFrontData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadFrontData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvLoadFront.LoadFrontSoap.EndLoadFrontData(System.IAsyncResult result) {
            return base.Channel.EndLoadFrontData(result);
        }
        
        private System.IAsyncResult OnBeginLoadFrontData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((AdminOpciones.SrvLoadFront.LoadFrontSoap)(this)).BeginLoadFrontData(callback, asyncState);
        }
        
        private object[] OnEndLoadFrontData(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvLoadFront.LoadFrontSoap)(this)).EndLoadFrontData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadFrontDataCompleted(object state) {
            if ((this.LoadFrontDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadFrontDataCompleted(this, new LoadFrontDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadFrontDataAsync() {
            this.LoadFrontDataAsync(null);
        }
        
        public void LoadFrontDataAsync(object userState) {
            if ((this.onBeginLoadFrontDataDelegate == null)) {
                this.onBeginLoadFrontDataDelegate = new BeginOperationDelegate(this.OnBeginLoadFrontData);
            }
            if ((this.onEndLoadFrontDataDelegate == null)) {
                this.onEndLoadFrontDataDelegate = new EndOperationDelegate(this.OnEndLoadFrontData);
            }
            if ((this.onLoadFrontDataCompletedDelegate == null)) {
                this.onLoadFrontDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadFrontDataCompleted);
            }
            base.InvokeAsync(this.onBeginLoadFrontDataDelegate, null, this.onEndLoadFrontDataDelegate, this.onLoadFrontDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AdminOpciones.SrvLoadFront.LoadFrontSoap CreateChannel() {
            return new LoadFrontSoapClientChannel(this);
        }
        
        private class LoadFrontSoapClientChannel : ChannelBase<AdminOpciones.SrvLoadFront.LoadFrontSoap>, AdminOpciones.SrvLoadFront.LoadFrontSoap {
            
            public LoadFrontSoapClientChannel(System.ServiceModel.ClientBase<AdminOpciones.SrvLoadFront.LoadFrontSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLoadSpot(int SetPricingLoading, System.DateTime FechaSetdePrecios, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = SetPricingLoading;
                _args[1] = FechaSetdePrecios;
                System.IAsyncResult _result = base.BeginInvoke("LoadSpot", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLoadSpot(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LoadSpot", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPuntosForward(System.DateTime fechaVal, System.DateTime fechaVcto, System.DateTime FechaSetDePrecios, double Spot, string CurvaDom, string CurvaFor, int setPricing, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = fechaVal;
                _args[1] = fechaVcto;
                _args[2] = FechaSetDePrecios;
                _args[3] = Spot;
                _args[4] = CurvaDom;
                _args[5] = CurvaFor;
                _args[6] = setPricing;
                System.IAsyncResult _result = base.BeginInvoke("PuntosForward", _args, callback, asyncState);
                return _result;
            }
            
            public double EndPuntosForward(System.IAsyncResult result) {
                object[] _args = new object[0];
                double _result = ((double)(base.EndInvoke("PuntosForward", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadDateProcess(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("LoadDateProcess", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLoadDateProcess(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LoadDateProcess", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadFrontData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("LoadFrontData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLoadFrontData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LoadFrontData", _args, result)));
                return _result;
            }
        }
    }
}
