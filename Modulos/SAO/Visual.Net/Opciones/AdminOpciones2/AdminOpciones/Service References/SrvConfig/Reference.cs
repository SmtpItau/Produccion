//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.233
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace AdminOpciones.SrvConfig {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SrvConfig.SrvConfigSoap")]
    public interface SrvConfigSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetApplicationSetting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetApplicationSetting(string ApplicationSetting, System.AsyncCallback callback, object asyncState);
        
        string EndGetApplicationSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllApplicationSetting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetAllApplicationSetting(System.AsyncCallback callback, object asyncState);
        
        string EndGetAllApplicationSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetArrayApplicationSetting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetArrayApplicationSetting(System.AsyncCallback callback, object asyncState);
        
        string[] EndGetArrayApplicationSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetLocalPath", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetLocalPath(System.AsyncCallback callback, object asyncState);
        
        string EndGetLocalPath(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetLocalPathNull", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetLocalPathNull(string path, System.AsyncCallback callback, object asyncState);
        
        string EndGetLocalPathNull(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SetApplicationSetting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSetApplicationSetting(string key, string parametro, System.AsyncCallback callback, object asyncState);
        
        string EndSetApplicationSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CheckApplicationSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCheckApplicationSettings(System.AsyncCallback callback, object asyncState);
        
        string EndCheckApplicationSettings(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SrvConfigSoapChannel : AdminOpciones.SrvConfig.SrvConfigSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllApplicationSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllApplicationSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetArrayApplicationSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetArrayApplicationSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLocalPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocalPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLocalPathNullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocalPathNullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetApplicationSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetApplicationSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckApplicationSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckApplicationSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SrvConfigSoapClient : System.ServiceModel.ClientBase<AdminOpciones.SrvConfig.SrvConfigSoap>, AdminOpciones.SrvConfig.SrvConfigSoap {
        
        private BeginOperationDelegate onBeginGetApplicationSettingDelegate;
        
        private EndOperationDelegate onEndGetApplicationSettingDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllApplicationSettingDelegate;
        
        private EndOperationDelegate onEndGetAllApplicationSettingDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllApplicationSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetArrayApplicationSettingDelegate;
        
        private EndOperationDelegate onEndGetArrayApplicationSettingDelegate;
        
        private System.Threading.SendOrPostCallback onGetArrayApplicationSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocalPathDelegate;
        
        private EndOperationDelegate onEndGetLocalPathDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocalPathCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocalPathNullDelegate;
        
        private EndOperationDelegate onEndGetLocalPathNullDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocalPathNullCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetApplicationSettingDelegate;
        
        private EndOperationDelegate onEndSetApplicationSettingDelegate;
        
        private System.Threading.SendOrPostCallback onSetApplicationSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckApplicationSettingsDelegate;
        
        private EndOperationDelegate onEndCheckApplicationSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onCheckApplicationSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SrvConfigSoapClient() {
        }
        
        public SrvConfigSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SrvConfigSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvConfigSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvConfigSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("No se puede establecer el objeto CookieContainer. Asegúrese de que el enlace cont" +
                            "iene un objeto HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetApplicationSettingCompletedEventArgs> GetApplicationSettingCompleted;
        
        public event System.EventHandler<GetAllApplicationSettingCompletedEventArgs> GetAllApplicationSettingCompleted;
        
        public event System.EventHandler<GetArrayApplicationSettingCompletedEventArgs> GetArrayApplicationSettingCompleted;
        
        public event System.EventHandler<GetLocalPathCompletedEventArgs> GetLocalPathCompleted;
        
        public event System.EventHandler<GetLocalPathNullCompletedEventArgs> GetLocalPathNullCompleted;
        
        public event System.EventHandler<SetApplicationSettingCompletedEventArgs> SetApplicationSettingCompleted;
        
        public event System.EventHandler<CheckApplicationSettingsCompletedEventArgs> CheckApplicationSettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvConfig.SrvConfigSoap.BeginGetApplicationSetting(string ApplicationSetting, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationSetting(ApplicationSetting, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvConfig.SrvConfigSoap.EndGetApplicationSetting(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationSetting(result);
        }
        
        private System.IAsyncResult OnBeginGetApplicationSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ApplicationSetting = ((string)(inValues[0]));
            return ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).BeginGetApplicationSetting(ApplicationSetting, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationSetting(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).EndGetApplicationSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApplicationSettingCompleted(object state) {
            if ((this.GetApplicationSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationSettingCompleted(this, new GetApplicationSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationSettingAsync(string ApplicationSetting) {
            this.GetApplicationSettingAsync(ApplicationSetting, null);
        }
        
        public void GetApplicationSettingAsync(string ApplicationSetting, object userState) {
            if ((this.onBeginGetApplicationSettingDelegate == null)) {
                this.onBeginGetApplicationSettingDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationSetting);
            }
            if ((this.onEndGetApplicationSettingDelegate == null)) {
                this.onEndGetApplicationSettingDelegate = new EndOperationDelegate(this.OnEndGetApplicationSetting);
            }
            if ((this.onGetApplicationSettingCompletedDelegate == null)) {
                this.onGetApplicationSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationSettingCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationSettingDelegate, new object[] {
                        ApplicationSetting}, this.onEndGetApplicationSettingDelegate, this.onGetApplicationSettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvConfig.SrvConfigSoap.BeginGetAllApplicationSetting(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllApplicationSetting(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvConfig.SrvConfigSoap.EndGetAllApplicationSetting(System.IAsyncResult result) {
            return base.Channel.EndGetAllApplicationSetting(result);
        }
        
        private System.IAsyncResult OnBeginGetAllApplicationSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).BeginGetAllApplicationSetting(callback, asyncState);
        }
        
        private object[] OnEndGetAllApplicationSetting(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).EndGetAllApplicationSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllApplicationSettingCompleted(object state) {
            if ((this.GetAllApplicationSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllApplicationSettingCompleted(this, new GetAllApplicationSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllApplicationSettingAsync() {
            this.GetAllApplicationSettingAsync(null);
        }
        
        public void GetAllApplicationSettingAsync(object userState) {
            if ((this.onBeginGetAllApplicationSettingDelegate == null)) {
                this.onBeginGetAllApplicationSettingDelegate = new BeginOperationDelegate(this.OnBeginGetAllApplicationSetting);
            }
            if ((this.onEndGetAllApplicationSettingDelegate == null)) {
                this.onEndGetAllApplicationSettingDelegate = new EndOperationDelegate(this.OnEndGetAllApplicationSetting);
            }
            if ((this.onGetAllApplicationSettingCompletedDelegate == null)) {
                this.onGetAllApplicationSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllApplicationSettingCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllApplicationSettingDelegate, null, this.onEndGetAllApplicationSettingDelegate, this.onGetAllApplicationSettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvConfig.SrvConfigSoap.BeginGetArrayApplicationSetting(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetArrayApplicationSetting(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] AdminOpciones.SrvConfig.SrvConfigSoap.EndGetArrayApplicationSetting(System.IAsyncResult result) {
            return base.Channel.EndGetArrayApplicationSetting(result);
        }
        
        private System.IAsyncResult OnBeginGetArrayApplicationSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).BeginGetArrayApplicationSetting(callback, asyncState);
        }
        
        private object[] OnEndGetArrayApplicationSetting(System.IAsyncResult result) {
            string[] retVal = ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).EndGetArrayApplicationSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetArrayApplicationSettingCompleted(object state) {
            if ((this.GetArrayApplicationSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetArrayApplicationSettingCompleted(this, new GetArrayApplicationSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetArrayApplicationSettingAsync() {
            this.GetArrayApplicationSettingAsync(null);
        }
        
        public void GetArrayApplicationSettingAsync(object userState) {
            if ((this.onBeginGetArrayApplicationSettingDelegate == null)) {
                this.onBeginGetArrayApplicationSettingDelegate = new BeginOperationDelegate(this.OnBeginGetArrayApplicationSetting);
            }
            if ((this.onEndGetArrayApplicationSettingDelegate == null)) {
                this.onEndGetArrayApplicationSettingDelegate = new EndOperationDelegate(this.OnEndGetArrayApplicationSetting);
            }
            if ((this.onGetArrayApplicationSettingCompletedDelegate == null)) {
                this.onGetArrayApplicationSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetArrayApplicationSettingCompleted);
            }
            base.InvokeAsync(this.onBeginGetArrayApplicationSettingDelegate, null, this.onEndGetArrayApplicationSettingDelegate, this.onGetArrayApplicationSettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvConfig.SrvConfigSoap.BeginGetLocalPath(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocalPath(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvConfig.SrvConfigSoap.EndGetLocalPath(System.IAsyncResult result) {
            return base.Channel.EndGetLocalPath(result);
        }
        
        private System.IAsyncResult OnBeginGetLocalPath(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).BeginGetLocalPath(callback, asyncState);
        }
        
        private object[] OnEndGetLocalPath(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).EndGetLocalPath(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocalPathCompleted(object state) {
            if ((this.GetLocalPathCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocalPathCompleted(this, new GetLocalPathCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocalPathAsync() {
            this.GetLocalPathAsync(null);
        }
        
        public void GetLocalPathAsync(object userState) {
            if ((this.onBeginGetLocalPathDelegate == null)) {
                this.onBeginGetLocalPathDelegate = new BeginOperationDelegate(this.OnBeginGetLocalPath);
            }
            if ((this.onEndGetLocalPathDelegate == null)) {
                this.onEndGetLocalPathDelegate = new EndOperationDelegate(this.OnEndGetLocalPath);
            }
            if ((this.onGetLocalPathCompletedDelegate == null)) {
                this.onGetLocalPathCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocalPathCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocalPathDelegate, null, this.onEndGetLocalPathDelegate, this.onGetLocalPathCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvConfig.SrvConfigSoap.BeginGetLocalPathNull(string path, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocalPathNull(path, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvConfig.SrvConfigSoap.EndGetLocalPathNull(System.IAsyncResult result) {
            return base.Channel.EndGetLocalPathNull(result);
        }
        
        private System.IAsyncResult OnBeginGetLocalPathNull(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string path = ((string)(inValues[0]));
            return ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).BeginGetLocalPathNull(path, callback, asyncState);
        }
        
        private object[] OnEndGetLocalPathNull(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).EndGetLocalPathNull(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocalPathNullCompleted(object state) {
            if ((this.GetLocalPathNullCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocalPathNullCompleted(this, new GetLocalPathNullCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocalPathNullAsync(string path) {
            this.GetLocalPathNullAsync(path, null);
        }
        
        public void GetLocalPathNullAsync(string path, object userState) {
            if ((this.onBeginGetLocalPathNullDelegate == null)) {
                this.onBeginGetLocalPathNullDelegate = new BeginOperationDelegate(this.OnBeginGetLocalPathNull);
            }
            if ((this.onEndGetLocalPathNullDelegate == null)) {
                this.onEndGetLocalPathNullDelegate = new EndOperationDelegate(this.OnEndGetLocalPathNull);
            }
            if ((this.onGetLocalPathNullCompletedDelegate == null)) {
                this.onGetLocalPathNullCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocalPathNullCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocalPathNullDelegate, new object[] {
                        path}, this.onEndGetLocalPathNullDelegate, this.onGetLocalPathNullCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvConfig.SrvConfigSoap.BeginSetApplicationSetting(string key, string parametro, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetApplicationSetting(key, parametro, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvConfig.SrvConfigSoap.EndSetApplicationSetting(System.IAsyncResult result) {
            return base.Channel.EndSetApplicationSetting(result);
        }
        
        private System.IAsyncResult OnBeginSetApplicationSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string key = ((string)(inValues[0]));
            string parametro = ((string)(inValues[1]));
            return ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).BeginSetApplicationSetting(key, parametro, callback, asyncState);
        }
        
        private object[] OnEndSetApplicationSetting(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).EndSetApplicationSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetApplicationSettingCompleted(object state) {
            if ((this.SetApplicationSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetApplicationSettingCompleted(this, new SetApplicationSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetApplicationSettingAsync(string key, string parametro) {
            this.SetApplicationSettingAsync(key, parametro, null);
        }
        
        public void SetApplicationSettingAsync(string key, string parametro, object userState) {
            if ((this.onBeginSetApplicationSettingDelegate == null)) {
                this.onBeginSetApplicationSettingDelegate = new BeginOperationDelegate(this.OnBeginSetApplicationSetting);
            }
            if ((this.onEndSetApplicationSettingDelegate == null)) {
                this.onEndSetApplicationSettingDelegate = new EndOperationDelegate(this.OnEndSetApplicationSetting);
            }
            if ((this.onSetApplicationSettingCompletedDelegate == null)) {
                this.onSetApplicationSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetApplicationSettingCompleted);
            }
            base.InvokeAsync(this.onBeginSetApplicationSettingDelegate, new object[] {
                        key,
                        parametro}, this.onEndSetApplicationSettingDelegate, this.onSetApplicationSettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvConfig.SrvConfigSoap.BeginCheckApplicationSettings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckApplicationSettings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvConfig.SrvConfigSoap.EndCheckApplicationSettings(System.IAsyncResult result) {
            return base.Channel.EndCheckApplicationSettings(result);
        }
        
        private System.IAsyncResult OnBeginCheckApplicationSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).BeginCheckApplicationSettings(callback, asyncState);
        }
        
        private object[] OnEndCheckApplicationSettings(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvConfig.SrvConfigSoap)(this)).EndCheckApplicationSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckApplicationSettingsCompleted(object state) {
            if ((this.CheckApplicationSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckApplicationSettingsCompleted(this, new CheckApplicationSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckApplicationSettingsAsync() {
            this.CheckApplicationSettingsAsync(null);
        }
        
        public void CheckApplicationSettingsAsync(object userState) {
            if ((this.onBeginCheckApplicationSettingsDelegate == null)) {
                this.onBeginCheckApplicationSettingsDelegate = new BeginOperationDelegate(this.OnBeginCheckApplicationSettings);
            }
            if ((this.onEndCheckApplicationSettingsDelegate == null)) {
                this.onEndCheckApplicationSettingsDelegate = new EndOperationDelegate(this.OnEndCheckApplicationSettings);
            }
            if ((this.onCheckApplicationSettingsCompletedDelegate == null)) {
                this.onCheckApplicationSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckApplicationSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginCheckApplicationSettingsDelegate, null, this.onEndCheckApplicationSettingsDelegate, this.onCheckApplicationSettingsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AdminOpciones.SrvConfig.SrvConfigSoap CreateChannel() {
            return new SrvConfigSoapClientChannel(this);
        }
        
        private class SrvConfigSoapClientChannel : ChannelBase<AdminOpciones.SrvConfig.SrvConfigSoap>, AdminOpciones.SrvConfig.SrvConfigSoap {
            
            public SrvConfigSoapClientChannel(System.ServiceModel.ClientBase<AdminOpciones.SrvConfig.SrvConfigSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetApplicationSetting(string ApplicationSetting, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ApplicationSetting;
                System.IAsyncResult _result = base.BeginInvoke("GetApplicationSetting", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetApplicationSetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetApplicationSetting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllApplicationSetting(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllApplicationSetting", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetAllApplicationSetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetAllApplicationSetting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetArrayApplicationSetting(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetArrayApplicationSetting", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndGetArrayApplicationSetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("GetArrayApplicationSetting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLocalPath(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLocalPath", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLocalPath(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLocalPath", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLocalPathNull(string path, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = path;
                System.IAsyncResult _result = base.BeginInvoke("GetLocalPathNull", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLocalPathNull(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLocalPathNull", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetApplicationSetting(string key, string parametro, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = key;
                _args[1] = parametro;
                System.IAsyncResult _result = base.BeginInvoke("SetApplicationSetting", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSetApplicationSetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SetApplicationSetting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckApplicationSettings(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CheckApplicationSettings", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCheckApplicationSettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CheckApplicationSettings", _args, result)));
                return _result;
            }
        }
    }
}
