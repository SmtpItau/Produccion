//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace AdminOpciones.SrvBDOpciones {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SrvBDOpciones.BDOpcionesSoap")]
    public interface BDOpcionesSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/InsertOption", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginInsertOption(string xdocInsert, string NomUser, string Estado, int NumFolio, int NumContrato, System.DateTime fProceso, bool _Turing, System.AsyncCallback callback, object asyncState);
        
        string EndInsertOption(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RecuperaContrato", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRecuperaContrato(int NumContrato, int NumFolio, System.AsyncCallback callback, object asyncState);
        
        string EndRecuperaContrato(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateOption", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUpdateOption(string xdocInsert, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateOption(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateFlagValuator", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUpdateFlagValuator(System.AsyncCallback callback, object asyncState);
        
        string EndUpdateFlagValuator(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/getTransactionIDD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BegingetTransactionIDD(string Aplicacion, string modulo, int numOp, int numDoc, int correlativo, System.AsyncCallback callback, object asyncState);
        
        string EndgetTransactionIDD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/updateTransaccionIDD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginupdateTransaccionIDD(int statusIDD, string Aplicacion, string modulo, int numOp, int numDoc, int correlativo, string mensajeIDD, int numeroIDD, int controlLinea, System.AsyncCallback callback, object asyncState);
        
        string EndupdateTransaccionIDD(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BDOpcionesSoapChannel : AdminOpciones.SrvBDOpciones.BDOpcionesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecuperaContratoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecuperaContratoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateFlagValuatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateFlagValuatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getTransactionIDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getTransactionIDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateTransaccionIDDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateTransaccionIDDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BDOpcionesSoapClient : System.ServiceModel.ClientBase<AdminOpciones.SrvBDOpciones.BDOpcionesSoap>, AdminOpciones.SrvBDOpciones.BDOpcionesSoap {
        
        private BeginOperationDelegate onBeginInsertOptionDelegate;
        
        private EndOperationDelegate onEndInsertOptionDelegate;
        
        private System.Threading.SendOrPostCallback onInsertOptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecuperaContratoDelegate;
        
        private EndOperationDelegate onEndRecuperaContratoDelegate;
        
        private System.Threading.SendOrPostCallback onRecuperaContratoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOptionDelegate;
        
        private EndOperationDelegate onEndUpdateOptionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFlagValuatorDelegate;
        
        private EndOperationDelegate onEndUpdateFlagValuatorDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFlagValuatorCompletedDelegate;
        
        private BeginOperationDelegate onBegingetTransactionIDDDelegate;
        
        private EndOperationDelegate onEndgetTransactionIDDDelegate;
        
        private System.Threading.SendOrPostCallback ongetTransactionIDDCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateTransaccionIDDDelegate;
        
        private EndOperationDelegate onEndupdateTransaccionIDDDelegate;
        
        private System.Threading.SendOrPostCallback onupdateTransaccionIDDCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BDOpcionesSoapClient() {
        }
        
        public BDOpcionesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BDOpcionesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BDOpcionesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BDOpcionesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<InsertOptionCompletedEventArgs> InsertOptionCompleted;
        
        public event System.EventHandler<RecuperaContratoCompletedEventArgs> RecuperaContratoCompleted;
        
        public event System.EventHandler<UpdateOptionCompletedEventArgs> UpdateOptionCompleted;
        
        public event System.EventHandler<UpdateFlagValuatorCompletedEventArgs> UpdateFlagValuatorCompleted;
        
        public event System.EventHandler<getTransactionIDDCompletedEventArgs> getTransactionIDDCompleted;
        
        public event System.EventHandler<updateTransaccionIDDCompletedEventArgs> updateTransaccionIDDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvBDOpciones.BDOpcionesSoap.BeginInsertOption(string xdocInsert, string NomUser, string Estado, int NumFolio, int NumContrato, System.DateTime fProceso, bool _Turing, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertOption(xdocInsert, NomUser, Estado, NumFolio, NumContrato, fProceso, _Turing, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvBDOpciones.BDOpcionesSoap.EndInsertOption(System.IAsyncResult result) {
            return base.Channel.EndInsertOption(result);
        }
        
        private System.IAsyncResult OnBeginInsertOption(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xdocInsert = ((string)(inValues[0]));
            string NomUser = ((string)(inValues[1]));
            string Estado = ((string)(inValues[2]));
            int NumFolio = ((int)(inValues[3]));
            int NumContrato = ((int)(inValues[4]));
            System.DateTime fProceso = ((System.DateTime)(inValues[5]));
            bool _Turing = ((bool)(inValues[6]));
            return ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).BeginInsertOption(xdocInsert, NomUser, Estado, NumFolio, NumContrato, fProceso, _Turing, callback, asyncState);
        }
        
        private object[] OnEndInsertOption(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).EndInsertOption(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertOptionCompleted(object state) {
            if ((this.InsertOptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertOptionCompleted(this, new InsertOptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertOptionAsync(string xdocInsert, string NomUser, string Estado, int NumFolio, int NumContrato, System.DateTime fProceso, bool _Turing) {
            this.InsertOptionAsync(xdocInsert, NomUser, Estado, NumFolio, NumContrato, fProceso, _Turing, null);
        }
        
        public void InsertOptionAsync(string xdocInsert, string NomUser, string Estado, int NumFolio, int NumContrato, System.DateTime fProceso, bool _Turing, object userState) {
            if ((this.onBeginInsertOptionDelegate == null)) {
                this.onBeginInsertOptionDelegate = new BeginOperationDelegate(this.OnBeginInsertOption);
            }
            if ((this.onEndInsertOptionDelegate == null)) {
                this.onEndInsertOptionDelegate = new EndOperationDelegate(this.OnEndInsertOption);
            }
            if ((this.onInsertOptionCompletedDelegate == null)) {
                this.onInsertOptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertOptionCompleted);
            }
            base.InvokeAsync(this.onBeginInsertOptionDelegate, new object[] {
                        xdocInsert,
                        NomUser,
                        Estado,
                        NumFolio,
                        NumContrato,
                        fProceso,
                        _Turing}, this.onEndInsertOptionDelegate, this.onInsertOptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvBDOpciones.BDOpcionesSoap.BeginRecuperaContrato(int NumContrato, int NumFolio, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecuperaContrato(NumContrato, NumFolio, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvBDOpciones.BDOpcionesSoap.EndRecuperaContrato(System.IAsyncResult result) {
            return base.Channel.EndRecuperaContrato(result);
        }
        
        private System.IAsyncResult OnBeginRecuperaContrato(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int NumContrato = ((int)(inValues[0]));
            int NumFolio = ((int)(inValues[1]));
            return ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).BeginRecuperaContrato(NumContrato, NumFolio, callback, asyncState);
        }
        
        private object[] OnEndRecuperaContrato(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).EndRecuperaContrato(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecuperaContratoCompleted(object state) {
            if ((this.RecuperaContratoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecuperaContratoCompleted(this, new RecuperaContratoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecuperaContratoAsync(int NumContrato, int NumFolio) {
            this.RecuperaContratoAsync(NumContrato, NumFolio, null);
        }
        
        public void RecuperaContratoAsync(int NumContrato, int NumFolio, object userState) {
            if ((this.onBeginRecuperaContratoDelegate == null)) {
                this.onBeginRecuperaContratoDelegate = new BeginOperationDelegate(this.OnBeginRecuperaContrato);
            }
            if ((this.onEndRecuperaContratoDelegate == null)) {
                this.onEndRecuperaContratoDelegate = new EndOperationDelegate(this.OnEndRecuperaContrato);
            }
            if ((this.onRecuperaContratoCompletedDelegate == null)) {
                this.onRecuperaContratoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecuperaContratoCompleted);
            }
            base.InvokeAsync(this.onBeginRecuperaContratoDelegate, new object[] {
                        NumContrato,
                        NumFolio}, this.onEndRecuperaContratoDelegate, this.onRecuperaContratoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvBDOpciones.BDOpcionesSoap.BeginUpdateOption(string xdocInsert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateOption(xdocInsert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvBDOpciones.BDOpcionesSoap.EndUpdateOption(System.IAsyncResult result) {
            return base.Channel.EndUpdateOption(result);
        }
        
        private System.IAsyncResult OnBeginUpdateOption(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xdocInsert = ((string)(inValues[0]));
            return ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).BeginUpdateOption(xdocInsert, callback, asyncState);
        }
        
        private object[] OnEndUpdateOption(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).EndUpdateOption(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateOptionCompleted(object state) {
            if ((this.UpdateOptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOptionCompleted(this, new UpdateOptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOptionAsync(string xdocInsert) {
            this.UpdateOptionAsync(xdocInsert, null);
        }
        
        public void UpdateOptionAsync(string xdocInsert, object userState) {
            if ((this.onBeginUpdateOptionDelegate == null)) {
                this.onBeginUpdateOptionDelegate = new BeginOperationDelegate(this.OnBeginUpdateOption);
            }
            if ((this.onEndUpdateOptionDelegate == null)) {
                this.onEndUpdateOptionDelegate = new EndOperationDelegate(this.OnEndUpdateOption);
            }
            if ((this.onUpdateOptionCompletedDelegate == null)) {
                this.onUpdateOptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOptionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOptionDelegate, new object[] {
                        xdocInsert}, this.onEndUpdateOptionDelegate, this.onUpdateOptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvBDOpciones.BDOpcionesSoap.BeginUpdateFlagValuator(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFlagValuator(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvBDOpciones.BDOpcionesSoap.EndUpdateFlagValuator(System.IAsyncResult result) {
            return base.Channel.EndUpdateFlagValuator(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFlagValuator(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).BeginUpdateFlagValuator(callback, asyncState);
        }
        
        private object[] OnEndUpdateFlagValuator(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).EndUpdateFlagValuator(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateFlagValuatorCompleted(object state) {
            if ((this.UpdateFlagValuatorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFlagValuatorCompleted(this, new UpdateFlagValuatorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFlagValuatorAsync() {
            this.UpdateFlagValuatorAsync(null);
        }
        
        public void UpdateFlagValuatorAsync(object userState) {
            if ((this.onBeginUpdateFlagValuatorDelegate == null)) {
                this.onBeginUpdateFlagValuatorDelegate = new BeginOperationDelegate(this.OnBeginUpdateFlagValuator);
            }
            if ((this.onEndUpdateFlagValuatorDelegate == null)) {
                this.onEndUpdateFlagValuatorDelegate = new EndOperationDelegate(this.OnEndUpdateFlagValuator);
            }
            if ((this.onUpdateFlagValuatorCompletedDelegate == null)) {
                this.onUpdateFlagValuatorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFlagValuatorCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFlagValuatorDelegate, null, this.onEndUpdateFlagValuatorDelegate, this.onUpdateFlagValuatorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvBDOpciones.BDOpcionesSoap.BegingetTransactionIDD(string Aplicacion, string modulo, int numOp, int numDoc, int correlativo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetTransactionIDD(Aplicacion, modulo, numOp, numDoc, correlativo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvBDOpciones.BDOpcionesSoap.EndgetTransactionIDD(System.IAsyncResult result) {
            return base.Channel.EndgetTransactionIDD(result);
        }
        
        private System.IAsyncResult OnBegingetTransactionIDD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Aplicacion = ((string)(inValues[0]));
            string modulo = ((string)(inValues[1]));
            int numOp = ((int)(inValues[2]));
            int numDoc = ((int)(inValues[3]));
            int correlativo = ((int)(inValues[4]));
            return ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).BegingetTransactionIDD(Aplicacion, modulo, numOp, numDoc, correlativo, callback, asyncState);
        }
        
        private object[] OnEndgetTransactionIDD(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).EndgetTransactionIDD(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetTransactionIDDCompleted(object state) {
            if ((this.getTransactionIDDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getTransactionIDDCompleted(this, new getTransactionIDDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getTransactionIDDAsync(string Aplicacion, string modulo, int numOp, int numDoc, int correlativo) {
            this.getTransactionIDDAsync(Aplicacion, modulo, numOp, numDoc, correlativo, null);
        }
        
        public void getTransactionIDDAsync(string Aplicacion, string modulo, int numOp, int numDoc, int correlativo, object userState) {
            if ((this.onBegingetTransactionIDDDelegate == null)) {
                this.onBegingetTransactionIDDDelegate = new BeginOperationDelegate(this.OnBegingetTransactionIDD);
            }
            if ((this.onEndgetTransactionIDDDelegate == null)) {
                this.onEndgetTransactionIDDDelegate = new EndOperationDelegate(this.OnEndgetTransactionIDD);
            }
            if ((this.ongetTransactionIDDCompletedDelegate == null)) {
                this.ongetTransactionIDDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetTransactionIDDCompleted);
            }
            base.InvokeAsync(this.onBegingetTransactionIDDDelegate, new object[] {
                        Aplicacion,
                        modulo,
                        numOp,
                        numDoc,
                        correlativo}, this.onEndgetTransactionIDDDelegate, this.ongetTransactionIDDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AdminOpciones.SrvBDOpciones.BDOpcionesSoap.BeginupdateTransaccionIDD(int statusIDD, string Aplicacion, string modulo, int numOp, int numDoc, int correlativo, string mensajeIDD, int numeroIDD, int controlLinea, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateTransaccionIDD(statusIDD, Aplicacion, modulo, numOp, numDoc, correlativo, mensajeIDD, numeroIDD, controlLinea, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AdminOpciones.SrvBDOpciones.BDOpcionesSoap.EndupdateTransaccionIDD(System.IAsyncResult result) {
            return base.Channel.EndupdateTransaccionIDD(result);
        }
        
        private System.IAsyncResult OnBeginupdateTransaccionIDD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int statusIDD = ((int)(inValues[0]));
            string Aplicacion = ((string)(inValues[1]));
            string modulo = ((string)(inValues[2]));
            int numOp = ((int)(inValues[3]));
            int numDoc = ((int)(inValues[4]));
            int correlativo = ((int)(inValues[5]));
            string mensajeIDD = ((string)(inValues[6]));
            int numeroIDD = ((int)(inValues[7]));
            int controlLinea = ((int)(inValues[8]));
            return ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).BeginupdateTransaccionIDD(statusIDD, Aplicacion, modulo, numOp, numDoc, correlativo, mensajeIDD, numeroIDD, controlLinea, callback, asyncState);
        }
        
        private object[] OnEndupdateTransaccionIDD(System.IAsyncResult result) {
            string retVal = ((AdminOpciones.SrvBDOpciones.BDOpcionesSoap)(this)).EndupdateTransaccionIDD(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateTransaccionIDDCompleted(object state) {
            if ((this.updateTransaccionIDDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateTransaccionIDDCompleted(this, new updateTransaccionIDDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateTransaccionIDDAsync(int statusIDD, string Aplicacion, string modulo, int numOp, int numDoc, int correlativo, string mensajeIDD, int numeroIDD, int controlLinea) {
            this.updateTransaccionIDDAsync(statusIDD, Aplicacion, modulo, numOp, numDoc, correlativo, mensajeIDD, numeroIDD, controlLinea, null);
        }
        
        public void updateTransaccionIDDAsync(int statusIDD, string Aplicacion, string modulo, int numOp, int numDoc, int correlativo, string mensajeIDD, int numeroIDD, int controlLinea, object userState) {
            if ((this.onBeginupdateTransaccionIDDDelegate == null)) {
                this.onBeginupdateTransaccionIDDDelegate = new BeginOperationDelegate(this.OnBeginupdateTransaccionIDD);
            }
            if ((this.onEndupdateTransaccionIDDDelegate == null)) {
                this.onEndupdateTransaccionIDDDelegate = new EndOperationDelegate(this.OnEndupdateTransaccionIDD);
            }
            if ((this.onupdateTransaccionIDDCompletedDelegate == null)) {
                this.onupdateTransaccionIDDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateTransaccionIDDCompleted);
            }
            base.InvokeAsync(this.onBeginupdateTransaccionIDDDelegate, new object[] {
                        statusIDD,
                        Aplicacion,
                        modulo,
                        numOp,
                        numDoc,
                        correlativo,
                        mensajeIDD,
                        numeroIDD,
                        controlLinea}, this.onEndupdateTransaccionIDDDelegate, this.onupdateTransaccionIDDCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AdminOpciones.SrvBDOpciones.BDOpcionesSoap CreateChannel() {
            return new BDOpcionesSoapClientChannel(this);
        }
        
        private class BDOpcionesSoapClientChannel : ChannelBase<AdminOpciones.SrvBDOpciones.BDOpcionesSoap>, AdminOpciones.SrvBDOpciones.BDOpcionesSoap {
            
            public BDOpcionesSoapClientChannel(System.ServiceModel.ClientBase<AdminOpciones.SrvBDOpciones.BDOpcionesSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertOption(string xdocInsert, string NomUser, string Estado, int NumFolio, int NumContrato, System.DateTime fProceso, bool _Turing, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = xdocInsert;
                _args[1] = NomUser;
                _args[2] = Estado;
                _args[3] = NumFolio;
                _args[4] = NumContrato;
                _args[5] = fProceso;
                _args[6] = _Turing;
                System.IAsyncResult _result = base.BeginInvoke("InsertOption", _args, callback, asyncState);
                return _result;
            }
            
            public string EndInsertOption(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("InsertOption", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecuperaContrato(int NumContrato, int NumFolio, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = NumContrato;
                _args[1] = NumFolio;
                System.IAsyncResult _result = base.BeginInvoke("RecuperaContrato", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRecuperaContrato(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RecuperaContrato", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateOption(string xdocInsert, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xdocInsert;
                System.IAsyncResult _result = base.BeginInvoke("UpdateOption", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpdateOption(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UpdateOption", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateFlagValuator(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("UpdateFlagValuator", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpdateFlagValuator(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UpdateFlagValuator", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetTransactionIDD(string Aplicacion, string modulo, int numOp, int numDoc, int correlativo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = Aplicacion;
                _args[1] = modulo;
                _args[2] = numOp;
                _args[3] = numDoc;
                _args[4] = correlativo;
                System.IAsyncResult _result = base.BeginInvoke("getTransactionIDD", _args, callback, asyncState);
                return _result;
            }
            
            public string EndgetTransactionIDD(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("getTransactionIDD", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdateTransaccionIDD(int statusIDD, string Aplicacion, string modulo, int numOp, int numDoc, int correlativo, string mensajeIDD, int numeroIDD, int controlLinea, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = statusIDD;
                _args[1] = Aplicacion;
                _args[2] = modulo;
                _args[3] = numOp;
                _args[4] = numDoc;
                _args[5] = correlativo;
                _args[6] = mensajeIDD;
                _args[7] = numeroIDD;
                _args[8] = controlLinea;
                System.IAsyncResult _result = base.BeginInvoke("updateTransaccionIDD", _args, callback, asyncState);
                return _result;
            }
            
            public string EndupdateTransaccionIDD(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("updateTransaccionIDD", _args, result)));
                return _result;
            }
        }
    }
}
